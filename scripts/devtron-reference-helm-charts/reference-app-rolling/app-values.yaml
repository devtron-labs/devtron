MinReadySeconds: 60

LivenessProbe:
  Path: ""
  port: 8080
  initialDelaySeconds: 20
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
  failureThreshold: 3

ReadinessProbe:
  Path: ""
  port: 8080
  initialDelaySeconds: 20
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
  failureThreshold: 3

ContainerPort:
  - name: app
    port: 8080
    servicePort: 80

args:
  enabled: false
  value: []

ingress:
  enabled: false
  annotations: {}
#     kubernetes.io/ingress.class: nginx
#     kubernetes.io/tls-acme: "true"
#    nginx.ingress.kubernetes.io/canary: "true"
#    nginx.ingress.kubernetes.io/canary-weight: "10"

  path: ""
  host: ""
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

ingressInternal:
  enabled: false
  annotations: {}
  #     kubernetes.io/ingress.class: nginx
  #     kubernetes.io/tls-acme: "true"
  #    nginx.ingress.kubernetes.io/canary: "true"
  #    nginx.ingress.kubernetes.io/canary-weight: "10"

  path: ""
  host: ""
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


volumeMounts: []
#     - name: log-volume
#       mountPath: /var/log

volumes: []
#     - name: log-volume
#       emptyDir: {}

image:
  pullPolicy: IfNotPresent

service:
  type: ClusterIP

prometheus:
  release: monitoring

pauseForSecondsBeforeSwitchActive: 30
waitForSecondsBeforeScalingDown: 30
