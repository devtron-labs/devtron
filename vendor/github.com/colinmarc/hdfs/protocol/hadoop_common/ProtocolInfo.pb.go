// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ProtocolInfo.proto

package hadoop_common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// *
// Request to get protocol versions for all supported rpc kinds.
type GetProtocolVersionsRequestProto struct {
	Protocol         *string `protobuf:"bytes,1,req,name=protocol" json:"protocol,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetProtocolVersionsRequestProto) Reset()         { *m = GetProtocolVersionsRequestProto{} }
func (m *GetProtocolVersionsRequestProto) String() string { return proto.CompactTextString(m) }
func (*GetProtocolVersionsRequestProto) ProtoMessage()    {}
func (*GetProtocolVersionsRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{0}
}

func (m *GetProtocolVersionsRequestProto) GetProtocol() string {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return ""
}

// *
// Protocol version with corresponding rpc kind.
type ProtocolVersionProto struct {
	RpcKind          *string  `protobuf:"bytes,1,req,name=rpcKind" json:"rpcKind,omitempty"`
	Versions         []uint64 `protobuf:"varint,2,rep,name=versions" json:"versions,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ProtocolVersionProto) Reset()                    { *m = ProtocolVersionProto{} }
func (m *ProtocolVersionProto) String() string            { return proto.CompactTextString(m) }
func (*ProtocolVersionProto) ProtoMessage()               {}
func (*ProtocolVersionProto) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

func (m *ProtocolVersionProto) GetRpcKind() string {
	if m != nil && m.RpcKind != nil {
		return *m.RpcKind
	}
	return ""
}

func (m *ProtocolVersionProto) GetVersions() []uint64 {
	if m != nil {
		return m.Versions
	}
	return nil
}

// *
// Get protocol version response.
type GetProtocolVersionsResponseProto struct {
	ProtocolVersions []*ProtocolVersionProto `protobuf:"bytes,1,rep,name=protocolVersions" json:"protocolVersions,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *GetProtocolVersionsResponseProto) Reset()         { *m = GetProtocolVersionsResponseProto{} }
func (m *GetProtocolVersionsResponseProto) String() string { return proto.CompactTextString(m) }
func (*GetProtocolVersionsResponseProto) ProtoMessage()    {}
func (*GetProtocolVersionsResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{2}
}

func (m *GetProtocolVersionsResponseProto) GetProtocolVersions() []*ProtocolVersionProto {
	if m != nil {
		return m.ProtocolVersions
	}
	return nil
}

// *
// Get protocol signature request.
type GetProtocolSignatureRequestProto struct {
	Protocol         *string `protobuf:"bytes,1,req,name=protocol" json:"protocol,omitempty"`
	RpcKind          *string `protobuf:"bytes,2,req,name=rpcKind" json:"rpcKind,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetProtocolSignatureRequestProto) Reset()         { *m = GetProtocolSignatureRequestProto{} }
func (m *GetProtocolSignatureRequestProto) String() string { return proto.CompactTextString(m) }
func (*GetProtocolSignatureRequestProto) ProtoMessage()    {}
func (*GetProtocolSignatureRequestProto) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{3}
}

func (m *GetProtocolSignatureRequestProto) GetProtocol() string {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return ""
}

func (m *GetProtocolSignatureRequestProto) GetRpcKind() string {
	if m != nil && m.RpcKind != nil {
		return *m.RpcKind
	}
	return ""
}

// *
// Get protocol signature response.
type GetProtocolSignatureResponseProto struct {
	ProtocolSignature []*ProtocolSignatureProto `protobuf:"bytes,1,rep,name=protocolSignature" json:"protocolSignature,omitempty"`
	XXX_unrecognized  []byte                    `json:"-"`
}

func (m *GetProtocolSignatureResponseProto) Reset()         { *m = GetProtocolSignatureResponseProto{} }
func (m *GetProtocolSignatureResponseProto) String() string { return proto.CompactTextString(m) }
func (*GetProtocolSignatureResponseProto) ProtoMessage()    {}
func (*GetProtocolSignatureResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{4}
}

func (m *GetProtocolSignatureResponseProto) GetProtocolSignature() []*ProtocolSignatureProto {
	if m != nil {
		return m.ProtocolSignature
	}
	return nil
}

type ProtocolSignatureProto struct {
	Version          *uint64  `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	Methods          []uint32 `protobuf:"varint,2,rep,name=methods" json:"methods,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ProtocolSignatureProto) Reset()                    { *m = ProtocolSignatureProto{} }
func (m *ProtocolSignatureProto) String() string            { return proto.CompactTextString(m) }
func (*ProtocolSignatureProto) ProtoMessage()               {}
func (*ProtocolSignatureProto) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{5} }

func (m *ProtocolSignatureProto) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *ProtocolSignatureProto) GetMethods() []uint32 {
	if m != nil {
		return m.Methods
	}
	return nil
}

func init() {
	proto.RegisterType((*GetProtocolVersionsRequestProto)(nil), "hadoop.common.GetProtocolVersionsRequestProto")
	proto.RegisterType((*ProtocolVersionProto)(nil), "hadoop.common.ProtocolVersionProto")
	proto.RegisterType((*GetProtocolVersionsResponseProto)(nil), "hadoop.common.GetProtocolVersionsResponseProto")
	proto.RegisterType((*GetProtocolSignatureRequestProto)(nil), "hadoop.common.GetProtocolSignatureRequestProto")
	proto.RegisterType((*GetProtocolSignatureResponseProto)(nil), "hadoop.common.GetProtocolSignatureResponseProto")
	proto.RegisterType((*ProtocolSignatureProto)(nil), "hadoop.common.ProtocolSignatureProto")
}

func init() { proto.RegisterFile("ProtocolInfo.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x51, 0x4b, 0xf3, 0x30,
	0x14, 0xa5, 0xdd, 0xe0, 0xfb, 0xbc, 0x32, 0xd0, 0x6e, 0x48, 0xd9, 0x83, 0xd6, 0x88, 0xb0, 0xa7,
	0x28, 0x7b, 0x14, 0x7c, 0xd9, 0x8b, 0x88, 0x03, 0x25, 0x03, 0xf1, 0xb5, 0x66, 0x59, 0x57, 0x70,
	0xb9, 0x31, 0xe9, 0x86, 0xfe, 0x83, 0xfd, 0x0c, 0x7f, 0xaa, 0x74, 0x69, 0x47, 0xdb, 0x45, 0xdd,
	0x5b, 0x4f, 0x73, 0xce, 0xbd, 0xf7, 0x9c, 0x9b, 0x40, 0xf0, 0xa4, 0x31, 0x43, 0x8e, 0x6f, 0xf7,
	0x72, 0x86, 0x54, 0xe5, 0x20, 0xe8, 0xcc, 0xe3, 0x29, 0xa2, 0xa2, 0x1c, 0x17, 0x0b, 0x94, 0xe4,
	0x16, 0xce, 0xee, 0x44, 0x56, 0xf2, 0x9e, 0x85, 0x36, 0x29, 0x4a, 0xc3, 0xc4, 0xfb, 0x52, 0x18,
	0xfb, 0x3b, 0xe8, 0xc3, 0x7f, 0x55, 0x9c, 0x87, 0x5e, 0xe4, 0x0f, 0x0e, 0xd8, 0x16, 0x93, 0x31,
	0xf4, 0x1a, 0x5a, 0xab, 0x09, 0xe1, 0x9f, 0x56, 0xfc, 0x21, 0x95, 0xd3, 0x42, 0x52, 0xc2, 0xbc,
	0xda, 0xaa, 0xe8, 0x12, 0xfa, 0x51, 0x6b, 0xd0, 0x66, 0x5b, 0x4c, 0x0c, 0x44, 0xce, 0x61, 0x8c,
	0x42, 0x69, 0x84, 0xad, 0xfc, 0x08, 0x47, 0xaa, 0x41, 0x08, 0xbd, 0xa8, 0x35, 0x38, 0x1c, 0x5e,
	0xd0, 0x9a, 0x35, 0xea, 0x1a, 0x8c, 0xed, 0x88, 0xc9, 0x4b, 0xad, 0xe9, 0x24, 0x4d, 0x64, 0x9c,
	0x2d, 0xb5, 0xd8, 0x37, 0x82, 0xaa, 0x55, 0xbf, 0x66, 0x95, 0x7c, 0xc0, 0xb9, 0xbb, 0x72, 0xd5,
	0xcf, 0x04, 0x8e, 0x55, 0x93, 0x51, 0x18, 0xba, 0xfc, 0xc1, 0xd0, 0x96, 0x67, 0x2d, 0xed, 0xea,
	0xc9, 0x18, 0x4e, 0xdc, 0xe4, 0x7c, 0xda, 0x22, 0xee, 0x8d, 0x91, 0x36, 0x2b, 0x61, 0x7e, 0xb2,
	0x10, 0xd9, 0x1c, 0xa7, 0x76, 0x2f, 0x1d, 0x56, 0xc2, 0xe1, 0xda, 0x87, 0x6e, 0xf5, 0x26, 0x4d,
	0x84, 0x5e, 0xa5, 0x5c, 0x04, 0x2b, 0xe8, 0x26, 0xbb, 0xeb, 0x0a, 0x68, 0x63, 0xec, 0x3f, 0xee,
	0x57, 0xff, 0x6a, 0x1f, 0x7e, 0x35, 0xb2, 0x4f, 0xe8, 0x25, 0x8e, 0x5c, 0x83, 0x5f, 0x0a, 0x39,
	0xd7, 0xda, 0xbf, 0xde, 0x4b, 0x50, 0x69, 0x3d, 0xba, 0x81, 0x53, 0xd4, 0x09, 0x8d, 0x55, 0xcc,
	0xe7, 0xa2, 0x54, 0xa7, 0x8a, 0xdb, 0xc7, 0xf5, 0xba, 0x9c, 0x8d, 0x6a, 0x6f, 0x6e, 0xf3, 0x6d,
	0xd6, 0x9e, 0xf7, 0xe5, 0x79, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x42, 0x12, 0xbd, 0x0a, 0x8e,
	0x03, 0x00, 0x00,
}
