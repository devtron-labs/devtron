FROM node:14 AS builder

WORKDIR /devtroncd/dashboard
COPY /dashboard/package.json .
COPY /dashboard/yarn.lock .
RUN yarn install --network-timeout 600000

COPY /dashboard/src/ src
COPY /dashboard/types/ types
#COPY nginx.conf .
COPY /dashboard/public/ public/
COPY /dashboard/tsconfig.json .
COPY . .
RUN echo REACT_APP_GIT_SHA=`git rev-parse --short HEAD` >> .env.production
RUN echo `git rev-parse --short HEAD` > health.html
RUN npm run build



FROM golang:1.18  AS build-env

RUN echo $GOPATH
RUN apt update
RUN apt install git gcc musl-dev make -y
RUN go install github.com/google/wire/cmd/wire@latest
WORKDIR /go/src/github.com/devtron-labs/devtron
ADD /devtron/. /go/src/github.com/devtron-labs/devtron/
RUN GOOS=linux make build-all

FROM ubuntu as  devtron-k8sclient-app

RUN apt update
RUN apt install ca-certificates curl -y
RUN apt clean autoclean
RUN apt autoremove -y && rm -rf /var/lib/apt/lists/*
#COPY --from=build-env  /go/src/github.com/devtron-labs/devtron/auth_model.conf .
COPY --from=build-env  /go/src/github.com/devtron-labs/devtron/cmd/k8s-client-app/devtron-k8sclient-app .

COPY --from=build-env  /go/src/github.com/devtron-labs/devtron/vendor/github.com/argoproj/argo-cd/assets/ /go/src/github.com/devtron-labs/devtron/vendor/github.com/argoproj/argo-cd/assets
COPY --from=build-env  /go/src/github.com/devtron-labs/devtron/scripts/devtron-reference-helm-charts scripts/devtron-reference-helm-charts
COPY --from=build-env  /go/src/github.com/devtron-labs/devtron/scripts/argo-assets/APPLICATION_TEMPLATE.JSON scripts/argo-assets/APPLICATION_TEMPLATE.JSON

CMD ["./devtron-k8sclient-app"]
