/*
Devtron Labs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiToken struct for ApiToken
type ApiToken struct {
	// Id of api-token
	Id *int32 `json:"id,omitempty"`
	// User Id associated with api-token
	UserId *int32 `json:"userId,omitempty"`
	// EmailId of that api-token user
	UserIdentifier *string `json:"userIdentifier,omitempty"`
	// Name of api-token
	Name *string `json:"name,omitempty"`
	// Description of api-token
	Description *string `json:"description,omitempty"`
	// Expiration time of api-token in milliseconds
	ExpireAtInMs *int64 `json:"expireAtInMs,omitempty"`
	// Token of that api-token
	Token *string `json:"token,omitempty"`
	// Date of Last used of this token
	LastUsedAt *string `json:"lastUsedAt,omitempty"`
	// token last used by IP
	LastUsedByIp *string `json:"lastUsedByIp,omitempty"`
	// token last updatedAt
	UpdatedAt *string `json:"updatedAt,omitempty"`
}

// NewApiToken instantiates a new ApiToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiToken() *ApiToken {
	this := ApiToken{}
	return &this
}

// NewApiTokenWithDefaults instantiates a new ApiToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTokenWithDefaults() *ApiToken {
	this := ApiToken{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiToken) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiToken) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiToken) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ApiToken) SetId(v int32) {
	o.Id = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ApiToken) GetUserId() int32 {
	if o == nil || o.UserId == nil {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiToken) GetUserIdOk() (*int32, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ApiToken) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ApiToken) SetUserId(v int32) {
	o.UserId = &v
}

// GetUserIdentifier returns the UserIdentifier field value if set, zero value otherwise.
func (o *ApiToken) GetUserIdentifier() string {
	if o == nil || o.UserIdentifier == nil {
		var ret string
		return ret
	}
	return *o.UserIdentifier
}

// GetUserIdentifierOk returns a tuple with the UserIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiToken) GetUserIdentifierOk() (*string, bool) {
	if o == nil || o.UserIdentifier == nil {
		return nil, false
	}
	return o.UserIdentifier, true
}

// HasUserIdentifier returns a boolean if a field has been set.
func (o *ApiToken) HasUserIdentifier() bool {
	if o != nil && o.UserIdentifier != nil {
		return true
	}

	return false
}

// SetUserIdentifier gets a reference to the given string and assigns it to the UserIdentifier field.
func (o *ApiToken) SetUserIdentifier(v string) {
	o.UserIdentifier = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiToken) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiToken) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiToken) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiToken) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiToken) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiToken) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiToken) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiToken) SetDescription(v string) {
	o.Description = &v
}

// GetExpireAtInMs returns the ExpireAtInMs field value if set, zero value otherwise.
func (o *ApiToken) GetExpireAtInMs() int64 {
	if o == nil || o.ExpireAtInMs == nil {
		var ret int64
		return ret
	}
	return *o.ExpireAtInMs
}

// GetExpireAtInMsOk returns a tuple with the ExpireAtInMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiToken) GetExpireAtInMsOk() (*int64, bool) {
	if o == nil || o.ExpireAtInMs == nil {
		return nil, false
	}
	return o.ExpireAtInMs, true
}

// HasExpireAtInMs returns a boolean if a field has been set.
func (o *ApiToken) HasExpireAtInMs() bool {
	if o != nil && o.ExpireAtInMs != nil {
		return true
	}

	return false
}

// SetExpireAtInMs gets a reference to the given int64 and assigns it to the ExpireAtInMs field.
func (o *ApiToken) SetExpireAtInMs(v int64) {
	o.ExpireAtInMs = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ApiToken) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiToken) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ApiToken) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ApiToken) SetToken(v string) {
	o.Token = &v
}

// GetLastUsedAt returns the LastUsedAt field value if set, zero value otherwise.
func (o *ApiToken) GetLastUsedAt() string {
	if o == nil || o.LastUsedAt == nil {
		var ret string
		return ret
	}
	return *o.LastUsedAt
}

// GetLastUsedAtOk returns a tuple with the LastUsedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiToken) GetLastUsedAtOk() (*string, bool) {
	if o == nil || o.LastUsedAt == nil {
		return nil, false
	}
	return o.LastUsedAt, true
}

// HasLastUsedAt returns a boolean if a field has been set.
func (o *ApiToken) HasLastUsedAt() bool {
	if o != nil && o.LastUsedAt != nil {
		return true
	}

	return false
}

// SetLastUsedAt gets a reference to the given string and assigns it to the LastUsedAt field.
func (o *ApiToken) SetLastUsedAt(v string) {
	o.LastUsedAt = &v
}

// GetLastUsedByIp returns the LastUsedByIp field value if set, zero value otherwise.
func (o *ApiToken) GetLastUsedByIp() string {
	if o == nil || o.LastUsedByIp == nil {
		var ret string
		return ret
	}
	return *o.LastUsedByIp
}

// GetLastUsedByIpOk returns a tuple with the LastUsedByIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiToken) GetLastUsedByIpOk() (*string, bool) {
	if o == nil || o.LastUsedByIp == nil {
		return nil, false
	}
	return o.LastUsedByIp, true
}

// HasLastUsedByIp returns a boolean if a field has been set.
func (o *ApiToken) HasLastUsedByIp() bool {
	if o != nil && o.LastUsedByIp != nil {
		return true
	}

	return false
}

// SetLastUsedByIp gets a reference to the given string and assigns it to the LastUsedByIp field.
func (o *ApiToken) SetLastUsedByIp(v string) {
	o.LastUsedByIp = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ApiToken) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiToken) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ApiToken) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ApiToken) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o ApiToken) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	if o.UserIdentifier != nil {
		toSerialize["userIdentifier"] = o.UserIdentifier
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ExpireAtInMs != nil {
		toSerialize["expireAtInMs"] = o.ExpireAtInMs
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.LastUsedAt != nil {
		toSerialize["lastUsedAt"] = o.LastUsedAt
	}
	if o.LastUsedByIp != nil {
		toSerialize["lastUsedByIp"] = o.LastUsedByIp
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableApiToken struct {
	value *ApiToken
	isSet bool
}

func (v NullableApiToken) Get() *ApiToken {
	return v.value
}

func (v *NullableApiToken) Set(val *ApiToken) {
	v.value = val
	v.isSet = true
}

func (v NullableApiToken) IsSet() bool {
	return v.isSet
}

func (v *NullableApiToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiToken(val *ApiToken) *NullableApiToken {
	return &NullableApiToken{value: val, isSet: true}
}

func (v NullableApiToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


