/*
Devtron Labs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// HelmAppDeploymentDetail struct for HelmAppDeploymentDetail
type HelmAppDeploymentDetail struct {
	ChartMetadata *ChartMetadata `json:"chartMetadata,omitempty"`
	// docker images presrnt insise the chart
	DockerImages *[]string `json:"dockerImages,omitempty"`
	// deployment version of the helm chart
	Version    *int       `json:"version,omitempty"`
	DeployedAt *time.Time `json:"deployedAt,omitempty"`
}

// NewHelmAppDeploymentDetail instantiates a new HelmAppDeploymentDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelmAppDeploymentDetail() *HelmAppDeploymentDetail {
	this := HelmAppDeploymentDetail{}
	return &this
}

// NewHelmAppDeploymentDetailWithDefaults instantiates a new HelmAppDeploymentDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelmAppDeploymentDetailWithDefaults() *HelmAppDeploymentDetail {
	this := HelmAppDeploymentDetail{}
	return &this
}

// GetChartMetadata returns the ChartMetadata field value if set, zero value otherwise.
func (o *HelmAppDeploymentDetail) GetChartMetadata() ChartMetadata {
	if o == nil || o.ChartMetadata == nil {
		var ret ChartMetadata
		return ret
	}
	return *o.ChartMetadata
}

// GetChartMetadataOk returns a tuple with the ChartMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAppDeploymentDetail) GetChartMetadataOk() (*ChartMetadata, bool) {
	if o == nil || o.ChartMetadata == nil {
		return nil, false
	}
	return o.ChartMetadata, true
}

// HasChartMetadata returns a boolean if a field has been set.
func (o *HelmAppDeploymentDetail) HasChartMetadata() bool {
	if o != nil && o.ChartMetadata != nil {
		return true
	}

	return false
}

// SetChartMetadata gets a reference to the given ChartMetadata and assigns it to the ChartMetadata field.
func (o *HelmAppDeploymentDetail) SetChartMetadata(v ChartMetadata) {
	o.ChartMetadata = &v
}

// GetDockerImages returns the DockerImages field value if set, zero value otherwise.
func (o *HelmAppDeploymentDetail) GetDockerImages() []string {
	if o == nil || o.DockerImages == nil {
		var ret []string
		return ret
	}
	return *o.DockerImages
}

// GetDockerImagesOk returns a tuple with the DockerImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAppDeploymentDetail) GetDockerImagesOk() (*[]string, bool) {
	if o == nil || o.DockerImages == nil {
		return nil, false
	}
	return o.DockerImages, true
}

// HasDockerImages returns a boolean if a field has been set.
func (o *HelmAppDeploymentDetail) HasDockerImages() bool {
	if o != nil && o.DockerImages != nil {
		return true
	}

	return false
}

// SetDockerImages gets a reference to the given []string and assigns it to the DockerImages field.
func (o *HelmAppDeploymentDetail) SetDockerImages(v []string) {
	o.DockerImages = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *HelmAppDeploymentDetail) GetVersion() int {
	if o == nil || o.Version == nil {
		var ret int
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAppDeploymentDetail) GetVersionOk() (*int, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *HelmAppDeploymentDetail) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int and assigns it to the Version field.
func (o *HelmAppDeploymentDetail) SetVersion(v int) {
	o.Version = &v
}

// GetDeployedAt returns the DeployedAt field value if set, zero value otherwise.
func (o *HelmAppDeploymentDetail) GetDeployedAt() time.Time {
	if o == nil || o.DeployedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.DeployedAt
}

// GetDeployedAtOk returns a tuple with the DeployedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmAppDeploymentDetail) GetDeployedAtOk() (*time.Time, bool) {
	if o == nil || o.DeployedAt == nil {
		return nil, false
	}
	return o.DeployedAt, true
}

// HasDeployedAt returns a boolean if a field has been set.
func (o *HelmAppDeploymentDetail) HasDeployedAt() bool {
	if o != nil && o.DeployedAt != nil {
		return true
	}

	return false
}

// SetDeployedAt gets a reference to the given time.Time and assigns it to the DeployedAt field.
func (o *HelmAppDeploymentDetail) SetDeployedAt(v time.Time) {
	o.DeployedAt = &v
}

func (o HelmAppDeploymentDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChartMetadata != nil {
		toSerialize["chartMetadata"] = o.ChartMetadata
	}
	if o.DockerImages != nil {
		toSerialize["dockerImages"] = o.DockerImages
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.DeployedAt != nil {
		toSerialize["deployedAt"] = o.DeployedAt
	}
	return json.Marshal(toSerialize)
}

type NullableHelmAppDeploymentDetail struct {
	value *HelmAppDeploymentDetail
	isSet bool
}

func (v NullableHelmAppDeploymentDetail) Get() *HelmAppDeploymentDetail {
	return v.value
}

func (v *NullableHelmAppDeploymentDetail) Set(val *HelmAppDeploymentDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableHelmAppDeploymentDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableHelmAppDeploymentDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelmAppDeploymentDetail(val *HelmAppDeploymentDetail) *NullableHelmAppDeploymentDetail {
	return &NullableHelmAppDeploymentDetail{value: val, isSet: true}
}

func (v NullableHelmAppDeploymentDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelmAppDeploymentDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
