/*
Devtron Labs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AppListRequest struct for AppListRequest
type AppListRequest struct {
	// project ids
	ProjectIds *[]int64 `json:"projectIds,omitempty"`
	// cluster ids
	ClusterIds *[]int64 `json:"clusterIds,omitempty"`
	// namespace ID
	Namespaces *[]string `json:"namespaces,omitempty"`
	// environemnt ids
	EnvironmentIds *[]int64 `json:"environmentIds,omitempty"`
}

// NewAppListRequest instantiates a new AppListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppListRequest() *AppListRequest {
	this := AppListRequest{}
	return &this
}

// NewAppListRequestWithDefaults instantiates a new AppListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppListRequestWithDefaults() *AppListRequest {
	this := AppListRequest{}
	return &this
}

// GetProjectIds returns the ProjectIds field value if set, zero value otherwise.
func (o *AppListRequest) GetProjectIds() []int64 {
	if o == nil || o.ProjectIds == nil {
		var ret []int64
		return ret
	}
	return *o.ProjectIds
}

// GetProjectIdsOk returns a tuple with the ProjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppListRequest) GetProjectIdsOk() (*[]int64, bool) {
	if o == nil || o.ProjectIds == nil {
		return nil, false
	}
	return o.ProjectIds, true
}

// HasProjectIds returns a boolean if a field has been set.
func (o *AppListRequest) HasProjectIds() bool {
	if o != nil && o.ProjectIds != nil {
		return true
	}

	return false
}

// SetProjectIds gets a reference to the given []int64 and assigns it to the ProjectIds field.
func (o *AppListRequest) SetProjectIds(v []int64) {
	o.ProjectIds = &v
}

// GetClusterIds returns the ClusterIds field value if set, zero value otherwise.
func (o *AppListRequest) GetClusterIds() []int64 {
	if o == nil || o.ClusterIds == nil {
		var ret []int64
		return ret
	}
	return *o.ClusterIds
}

// GetClusterIdsOk returns a tuple with the ClusterIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppListRequest) GetClusterIdsOk() (*[]int64, bool) {
	if o == nil || o.ClusterIds == nil {
		return nil, false
	}
	return o.ClusterIds, true
}

// HasClusterIds returns a boolean if a field has been set.
func (o *AppListRequest) HasClusterIds() bool {
	if o != nil && o.ClusterIds != nil {
		return true
	}

	return false
}

// SetClusterIds gets a reference to the given []int64 and assigns it to the ClusterIds field.
func (o *AppListRequest) SetClusterIds(v []int64) {
	o.ClusterIds = &v
}

// GetNamespaces returns the Namespaces field value if set, zero value otherwise.
func (o *AppListRequest) GetNamespaces() []string {
	if o == nil || o.Namespaces == nil {
		var ret []string
		return ret
	}
	return *o.Namespaces
}

// GetNamespacesOk returns a tuple with the Namespaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppListRequest) GetNamespacesOk() (*[]string, bool) {
	if o == nil || o.Namespaces == nil {
		return nil, false
	}
	return o.Namespaces, true
}

// HasNamespaces returns a boolean if a field has been set.
func (o *AppListRequest) HasNamespaces() bool {
	if o != nil && o.Namespaces != nil {
		return true
	}

	return false
}

// SetNamespaces gets a reference to the given []string and assigns it to the Namespaces field.
func (o *AppListRequest) SetNamespaces(v []string) {
	o.Namespaces = &v
}

// GetEnvironmentIds returns the EnvironmentIds field value if set, zero value otherwise.
func (o *AppListRequest) GetEnvironmentIds() []int64 {
	if o == nil || o.EnvironmentIds == nil {
		var ret []int64
		return ret
	}
	return *o.EnvironmentIds
}

// GetEnvironmentIdsOk returns a tuple with the EnvironmentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppListRequest) GetEnvironmentIdsOk() (*[]int64, bool) {
	if o == nil || o.EnvironmentIds == nil {
		return nil, false
	}
	return o.EnvironmentIds, true
}

// HasEnvironmentIds returns a boolean if a field has been set.
func (o *AppListRequest) HasEnvironmentIds() bool {
	if o != nil && o.EnvironmentIds != nil {
		return true
	}

	return false
}

// SetEnvironmentIds gets a reference to the given []int64 and assigns it to the EnvironmentIds field.
func (o *AppListRequest) SetEnvironmentIds(v []int64) {
	o.EnvironmentIds = &v
}

func (o AppListRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProjectIds != nil {
		toSerialize["projectIds"] = o.ProjectIds
	}
	if o.ClusterIds != nil {
		toSerialize["clusterIds"] = o.ClusterIds
	}
	if o.Namespaces != nil {
		toSerialize["namespaces"] = o.Namespaces
	}
	if o.EnvironmentIds != nil {
		toSerialize["environmentIds"] = o.EnvironmentIds
	}
	return json.Marshal(toSerialize)
}

type NullableAppListRequest struct {
	value *AppListRequest
	isSet bool
}

func (v NullableAppListRequest) Get() *AppListRequest {
	return v.value
}

func (v *NullableAppListRequest) Set(val *AppListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAppListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAppListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppListRequest(val *AppListRequest) *NullableAppListRequest {
	return &NullableAppListRequest{value: val, isSet: true}
}

func (v NullableAppListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
