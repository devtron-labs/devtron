/*
Devtron Labs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ReleaseInfo struct for ReleaseInfo
type ReleaseInfo struct {
	DeployedAppDetail *HelmApp `json:"deployedAppDetail,omitempty"`
	// default chat values
	DefaultValues *string `json:"defaultValues,omitempty"`
	// overrides passed by user
	OverrideValues *string `json:"overrideValues,omitempty"`
	// merged values
	MergedValues *string `json:"mergedValues,omitempty"`
	// readme of the chart
	Readme *string `json:"readme,omitempty"`
}

// NewReleaseInfo instantiates a new ReleaseInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReleaseInfo() *ReleaseInfo {
	this := ReleaseInfo{}
	return &this
}

// NewReleaseInfoWithDefaults instantiates a new ReleaseInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReleaseInfoWithDefaults() *ReleaseInfo {
	this := ReleaseInfo{}
	return &this
}

// GetDeployedAppDetail returns the DeployedAppDetail field value if set, zero value otherwise.
func (o *ReleaseInfo) GetDeployedAppDetail() HelmApp {
	if o == nil || o.DeployedAppDetail == nil {
		var ret HelmApp
		return ret
	}
	return *o.DeployedAppDetail
}

// GetDeployedAppDetailOk returns a tuple with the DeployedAppDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseInfo) GetDeployedAppDetailOk() (*HelmApp, bool) {
	if o == nil || o.DeployedAppDetail == nil {
		return nil, false
	}
	return o.DeployedAppDetail, true
}

// HasDeployedAppDetail returns a boolean if a field has been set.
func (o *ReleaseInfo) HasDeployedAppDetail() bool {
	if o != nil && o.DeployedAppDetail != nil {
		return true
	}

	return false
}

// SetDeployedAppDetail gets a reference to the given HelmApp and assigns it to the DeployedAppDetail field.
func (o *ReleaseInfo) SetDeployedAppDetail(v HelmApp) {
	o.DeployedAppDetail = &v
}

// GetDefaultValues returns the DefaultValues field value if set, zero value otherwise.
func (o *ReleaseInfo) GetDefaultValues() string {
	if o == nil || o.DefaultValues == nil {
		var ret string
		return ret
	}
	return *o.DefaultValues
}

// GetDefaultValuesOk returns a tuple with the DefaultValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseInfo) GetDefaultValuesOk() (*string, bool) {
	if o == nil || o.DefaultValues == nil {
		return nil, false
	}
	return o.DefaultValues, true
}

// HasDefaultValues returns a boolean if a field has been set.
func (o *ReleaseInfo) HasDefaultValues() bool {
	if o != nil && o.DefaultValues != nil {
		return true
	}

	return false
}

// SetDefaultValues gets a reference to the given string and assigns it to the DefaultValues field.
func (o *ReleaseInfo) SetDefaultValues(v string) {
	o.DefaultValues = &v
}

// GetOverrideValues returns the OverrideValues field value if set, zero value otherwise.
func (o *ReleaseInfo) GetOverrideValues() string {
	if o == nil || o.OverrideValues == nil {
		var ret string
		return ret
	}
	return *o.OverrideValues
}

// GetOverrideValuesOk returns a tuple with the OverrideValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseInfo) GetOverrideValuesOk() (*string, bool) {
	if o == nil || o.OverrideValues == nil {
		return nil, false
	}
	return o.OverrideValues, true
}

// HasOverrideValues returns a boolean if a field has been set.
func (o *ReleaseInfo) HasOverrideValues() bool {
	if o != nil && o.OverrideValues != nil {
		return true
	}

	return false
}

// SetOverrideValues gets a reference to the given string and assigns it to the OverrideValues field.
func (o *ReleaseInfo) SetOverrideValues(v string) {
	o.OverrideValues = &v
}

// GetMergedValues returns the MergedValues field value if set, zero value otherwise.
func (o *ReleaseInfo) GetMergedValues() string {
	if o == nil || o.MergedValues == nil {
		var ret string
		return ret
	}
	return *o.MergedValues
}

// GetMergedValuesOk returns a tuple with the MergedValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseInfo) GetMergedValuesOk() (*string, bool) {
	if o == nil || o.MergedValues == nil {
		return nil, false
	}
	return o.MergedValues, true
}

// HasMergedValues returns a boolean if a field has been set.
func (o *ReleaseInfo) HasMergedValues() bool {
	if o != nil && o.MergedValues != nil {
		return true
	}

	return false
}

// SetMergedValues gets a reference to the given string and assigns it to the MergedValues field.
func (o *ReleaseInfo) SetMergedValues(v string) {
	o.MergedValues = &v
}

// GetReadme returns the Readme field value if set, zero value otherwise.
func (o *ReleaseInfo) GetReadme() string {
	if o == nil || o.Readme == nil {
		var ret string
		return ret
	}
	return *o.Readme
}

// GetReadmeOk returns a tuple with the Readme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseInfo) GetReadmeOk() (*string, bool) {
	if o == nil || o.Readme == nil {
		return nil, false
	}
	return o.Readme, true
}

// HasReadme returns a boolean if a field has been set.
func (o *ReleaseInfo) HasReadme() bool {
	if o != nil && o.Readme != nil {
		return true
	}

	return false
}

// SetReadme gets a reference to the given string and assigns it to the Readme field.
func (o *ReleaseInfo) SetReadme(v string) {
	o.Readme = &v
}

func (o ReleaseInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeployedAppDetail != nil {
		toSerialize["deployedAppDetail"] = o.DeployedAppDetail
	}
	if o.DefaultValues != nil {
		toSerialize["defaultValues"] = o.DefaultValues
	}
	if o.OverrideValues != nil {
		toSerialize["overrideValues"] = o.OverrideValues
	}
	if o.MergedValues != nil {
		toSerialize["mergedValues"] = o.MergedValues
	}
	if o.Readme != nil {
		toSerialize["readme"] = o.Readme
	}
	return json.Marshal(toSerialize)
}

type NullableReleaseInfo struct {
	value *ReleaseInfo
	isSet bool
}

func (v NullableReleaseInfo) Get() *ReleaseInfo {
	return v.value
}

func (v *NullableReleaseInfo) Set(val *ReleaseInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableReleaseInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableReleaseInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReleaseInfo(val *ReleaseInfo) *NullableReleaseInfo {
	return &NullableReleaseInfo{value: val, isSet: true}
}

func (v NullableReleaseInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReleaseInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


