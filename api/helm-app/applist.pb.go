// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.9.1
// source: grpc/applist.proto

package client

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClusterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiServerUrl string `protobuf:"bytes,1,opt,name=apiServerUrl,proto3" json:"apiServerUrl,omitempty"`
	Token        string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ClusterId    int32  `protobuf:"varint,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	ClusterName  string `protobuf:"bytes,4,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
}

func (x *ClusterConfig) Reset() {
	*x = ClusterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterConfig) ProtoMessage() {}

func (x *ClusterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterConfig.ProtoReflect.Descriptor instead.
func (*ClusterConfig) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{0}
}

func (x *ClusterConfig) GetApiServerUrl() string {
	if x != nil {
		return x.ApiServerUrl
	}
	return ""
}

func (x *ClusterConfig) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ClusterConfig) GetClusterId() int32 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *ClusterConfig) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type AppListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clusters []*ClusterConfig `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
}

func (x *AppListRequest) Reset() {
	*x = AppListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListRequest) ProtoMessage() {}

func (x *AppListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListRequest.ProtoReflect.Descriptor instead.
func (*AppListRequest) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{1}
}

func (x *AppListRequest) GetClusters() []*ClusterConfig {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type DeployedAppList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeployedAppDetail []*DeployedAppDetail `protobuf:"bytes,1,rep,name=DeployedAppDetail,proto3" json:"DeployedAppDetail,omitempty"`
	ClusterId         int32                `protobuf:"varint,2,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	ErrorMsg          string               `protobuf:"bytes,3,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	Errored           bool                 `protobuf:"varint,4,opt,name=errored,proto3" json:"errored,omitempty"`
}

func (x *DeployedAppList) Reset() {
	*x = DeployedAppList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployedAppList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployedAppList) ProtoMessage() {}

func (x *DeployedAppList) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployedAppList.ProtoReflect.Descriptor instead.
func (*DeployedAppList) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{2}
}

func (x *DeployedAppList) GetDeployedAppDetail() []*DeployedAppDetail {
	if x != nil {
		return x.DeployedAppDetail
	}
	return nil
}

func (x *DeployedAppList) GetClusterId() int32 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *DeployedAppList) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *DeployedAppList) GetErrored() bool {
	if x != nil {
		return x.Errored
	}
	return false
}

type DeployedAppDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId             string               `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	AppName           string               `protobuf:"bytes,2,opt,name=appName,proto3" json:"appName,omitempty"`
	ChartName         string               `protobuf:"bytes,3,opt,name=chartName,proto3" json:"chartName,omitempty"`
	ChartAvatar       string               `protobuf:"bytes,4,opt,name=chartAvatar,proto3" json:"chartAvatar,omitempty"`
	EnvironmentDetail *EnvironmentDetails  `protobuf:"bytes,5,opt,name=environmentDetail,proto3" json:"environmentDetail,omitempty"`
	LastDeployed      *timestamp.Timestamp `protobuf:"bytes,6,opt,name=LastDeployed,proto3" json:"LastDeployed,omitempty"`
	ChartVersion      string               `protobuf:"bytes,7,opt,name=chartVersion,proto3" json:"chartVersion,omitempty"`
}

func (x *DeployedAppDetail) Reset() {
	*x = DeployedAppDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployedAppDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployedAppDetail) ProtoMessage() {}

func (x *DeployedAppDetail) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployedAppDetail.ProtoReflect.Descriptor instead.
func (*DeployedAppDetail) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{3}
}

func (x *DeployedAppDetail) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *DeployedAppDetail) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *DeployedAppDetail) GetChartName() string {
	if x != nil {
		return x.ChartName
	}
	return ""
}

func (x *DeployedAppDetail) GetChartAvatar() string {
	if x != nil {
		return x.ChartAvatar
	}
	return ""
}

func (x *DeployedAppDetail) GetEnvironmentDetail() *EnvironmentDetails {
	if x != nil {
		return x.EnvironmentDetail
	}
	return nil
}

func (x *DeployedAppDetail) GetLastDeployed() *timestamp.Timestamp {
	if x != nil {
		return x.LastDeployed
	}
	return nil
}

func (x *DeployedAppDetail) GetChartVersion() string {
	if x != nil {
		return x.ChartVersion
	}
	return ""
}

type EnvironmentDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName string `protobuf:"bytes,1,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	ClusterId   int32  `protobuf:"varint,2,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	Namespace   string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *EnvironmentDetails) Reset() {
	*x = EnvironmentDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentDetails) ProtoMessage() {}

func (x *EnvironmentDetails) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentDetails.ProtoReflect.Descriptor instead.
func (*EnvironmentDetails) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{4}
}

func (x *EnvironmentDetails) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *EnvironmentDetails) GetClusterId() int32 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *EnvironmentDetails) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type AppDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterConfig *ClusterConfig `protobuf:"bytes,1,opt,name=clusterConfig,proto3" json:"clusterConfig,omitempty"`
	Namespace     string         `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ReleaseName   string         `protobuf:"bytes,3,opt,name=ReleaseName,proto3" json:"ReleaseName,omitempty"`
}

func (x *AppDetailRequest) Reset() {
	*x = AppDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppDetailRequest) ProtoMessage() {}

func (x *AppDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppDetailRequest.ProtoReflect.Descriptor instead.
func (*AppDetailRequest) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{5}
}

func (x *AppDetailRequest) GetClusterConfig() *ClusterConfig {
	if x != nil {
		return x.ClusterConfig
	}
	return nil
}

func (x *AppDetailRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AppDetailRequest) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

type AppDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationStatus    string                `protobuf:"bytes,1,opt,name=applicationStatus,proto3" json:"applicationStatus,omitempty"`
	ReleaseStatus        *ReleaseStatus        `protobuf:"bytes,2,opt,name=releaseStatus,proto3" json:"releaseStatus,omitempty"`
	LastDeployed         *timestamp.Timestamp  `protobuf:"bytes,6,opt,name=lastDeployed,proto3" json:"lastDeployed,omitempty"`
	ChartMetadata        *ChartMetadata        `protobuf:"bytes,7,opt,name=chartMetadata,proto3" json:"chartMetadata,omitempty"`
	ResourceTreeResponse *ResourceTreeResponse `protobuf:"bytes,8,opt,name=resourceTreeResponse,proto3" json:"resourceTreeResponse,omitempty"`
	EnvironmentDetails   *EnvironmentDetails   `protobuf:"bytes,9,opt,name=environmentDetails,proto3" json:"environmentDetails,omitempty"`
}

func (x *AppDetail) Reset() {
	*x = AppDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppDetail) ProtoMessage() {}

func (x *AppDetail) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppDetail.ProtoReflect.Descriptor instead.
func (*AppDetail) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{6}
}

func (x *AppDetail) GetApplicationStatus() string {
	if x != nil {
		return x.ApplicationStatus
	}
	return ""
}

func (x *AppDetail) GetReleaseStatus() *ReleaseStatus {
	if x != nil {
		return x.ReleaseStatus
	}
	return nil
}

func (x *AppDetail) GetLastDeployed() *timestamp.Timestamp {
	if x != nil {
		return x.LastDeployed
	}
	return nil
}

func (x *AppDetail) GetChartMetadata() *ChartMetadata {
	if x != nil {
		return x.ChartMetadata
	}
	return nil
}

func (x *AppDetail) GetResourceTreeResponse() *ResourceTreeResponse {
	if x != nil {
		return x.ResourceTreeResponse
	}
	return nil
}

func (x *AppDetail) GetEnvironmentDetails() *EnvironmentDetails {
	if x != nil {
		return x.EnvironmentDetails
	}
	return nil
}

type ReleaseStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message     string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ReleaseStatus) Reset() {
	*x = ReleaseStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseStatus) ProtoMessage() {}

func (x *ReleaseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseStatus.ProtoReflect.Descriptor instead.
func (*ReleaseStatus) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{7}
}

func (x *ReleaseStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ReleaseStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReleaseStatus) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ChartMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChartName    string   `protobuf:"bytes,1,opt,name=chartName,proto3" json:"chartName,omitempty"`
	ChartVersion string   `protobuf:"bytes,2,opt,name=chartVersion,proto3" json:"chartVersion,omitempty"`
	Home         string   `protobuf:"bytes,3,opt,name=home,proto3" json:"home,omitempty"`
	Sources      []string `protobuf:"bytes,4,rep,name=sources,proto3" json:"sources,omitempty"`
	Description  string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Contains the rendered templates/NOTES.txt
	Notes string `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
}

func (x *ChartMetadata) Reset() {
	*x = ChartMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartMetadata) ProtoMessage() {}

func (x *ChartMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartMetadata.ProtoReflect.Descriptor instead.
func (*ChartMetadata) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{8}
}

func (x *ChartMetadata) GetChartName() string {
	if x != nil {
		return x.ChartName
	}
	return ""
}

func (x *ChartMetadata) GetChartVersion() string {
	if x != nil {
		return x.ChartVersion
	}
	return ""
}

func (x *ChartMetadata) GetHome() string {
	if x != nil {
		return x.Home
	}
	return ""
}

func (x *ChartMetadata) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *ChartMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChartMetadata) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type ResourceTreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes       []*ResourceNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	PodMetadata []*PodMetadata  `protobuf:"bytes,2,rep,name=podMetadata,proto3" json:"podMetadata,omitempty"`
}

func (x *ResourceTreeResponse) Reset() {
	*x = ResourceTreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceTreeResponse) ProtoMessage() {}

func (x *ResourceTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceTreeResponse.ProtoReflect.Descriptor instead.
func (*ResourceTreeResponse) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{9}
}

func (x *ResourceTreeResponse) GetNodes() []*ResourceNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ResourceTreeResponse) GetPodMetadata() []*PodMetadata {
	if x != nil {
		return x.PodMetadata
	}
	return nil
}

type ResourceNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group           string                  `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Version         string                  `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Kind            string                  `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
	Namespace       string                  `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name            string                  `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Uid             string                  `protobuf:"bytes,6,opt,name=uid,proto3" json:"uid,omitempty"`
	ParentRefs      []*ResourceRef          `protobuf:"bytes,7,rep,name=parentRefs,proto3" json:"parentRefs,omitempty"`
	NetworkingInfo  *ResourceNetworkingInfo `protobuf:"bytes,8,opt,name=networkingInfo,proto3" json:"networkingInfo,omitempty"`
	ResourceVersion string                  `protobuf:"bytes,9,opt,name=resourceVersion,proto3" json:"resourceVersion,omitempty"`
	Health          *HealthStatus           `protobuf:"bytes,10,opt,name=health,proto3" json:"health,omitempty"`
	IsHibernated    bool                    `protobuf:"varint,11,opt,name=isHibernated,proto3" json:"isHibernated,omitempty"`
	CanBeHibernated bool                    `protobuf:"varint,12,opt,name=canBeHibernated,proto3" json:"canBeHibernated,omitempty"`
}

func (x *ResourceNode) Reset() {
	*x = ResourceNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceNode) ProtoMessage() {}

func (x *ResourceNode) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceNode.ProtoReflect.Descriptor instead.
func (*ResourceNode) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{10}
}

func (x *ResourceNode) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ResourceNode) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ResourceNode) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ResourceNode) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResourceNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceNode) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ResourceNode) GetParentRefs() []*ResourceRef {
	if x != nil {
		return x.ParentRefs
	}
	return nil
}

func (x *ResourceNode) GetNetworkingInfo() *ResourceNetworkingInfo {
	if x != nil {
		return x.NetworkingInfo
	}
	return nil
}

func (x *ResourceNode) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

func (x *ResourceNode) GetHealth() *HealthStatus {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *ResourceNode) GetIsHibernated() bool {
	if x != nil {
		return x.IsHibernated
	}
	return false
}

func (x *ResourceNode) GetCanBeHibernated() bool {
	if x != nil {
		return x.CanBeHibernated
	}
	return false
}

type HealthStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HealthStatus) Reset() {
	*x = HealthStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthStatus) ProtoMessage() {}

func (x *HealthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthStatus.ProtoReflect.Descriptor instead.
func (*HealthStatus) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{11}
}

func (x *HealthStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResourceNetworkingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ResourceNetworkingInfo) Reset() {
	*x = ResourceNetworkingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceNetworkingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceNetworkingInfo) ProtoMessage() {}

func (x *ResourceNetworkingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceNetworkingInfo.ProtoReflect.Descriptor instead.
func (*ResourceNetworkingInfo) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{12}
}

func (x *ResourceNetworkingInfo) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ResourceRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group     string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Version   string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Kind      string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Uid       string `protobuf:"bytes,6,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ResourceRef) Reset() {
	*x = ResourceRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRef) ProtoMessage() {}

func (x *ResourceRef) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRef.ProtoReflect.Descriptor instead.
func (*ResourceRef) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{13}
}

func (x *ResourceRef) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ResourceRef) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ResourceRef) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ResourceRef) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResourceRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceRef) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type PodMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uid            string   `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Containers     []string `protobuf:"bytes,3,rep,name=containers,proto3" json:"containers,omitempty"`
	InitContainers []string `protobuf:"bytes,4,rep,name=initContainers,proto3" json:"initContainers,omitempty"`
	IsNew          bool     `protobuf:"varint,5,opt,name=isNew,proto3" json:"isNew,omitempty"`
}

func (x *PodMetadata) Reset() {
	*x = PodMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodMetadata) ProtoMessage() {}

func (x *PodMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodMetadata.ProtoReflect.Descriptor instead.
func (*PodMetadata) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{14}
}

func (x *PodMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PodMetadata) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PodMetadata) GetContainers() []string {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *PodMetadata) GetInitContainers() []string {
	if x != nil {
		return x.InitContainers
	}
	return nil
}

func (x *PodMetadata) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

type HibernateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterConfig    *ClusterConfig      `protobuf:"bytes,1,opt,name=clusterConfig,proto3" json:"clusterConfig,omitempty"`
	ObjectIdentifier []*ObjectIdentifier `protobuf:"bytes,2,rep,name=objectIdentifier,proto3" json:"objectIdentifier,omitempty"`
}

func (x *HibernateRequest) Reset() {
	*x = HibernateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HibernateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HibernateRequest) ProtoMessage() {}

func (x *HibernateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HibernateRequest.ProtoReflect.Descriptor instead.
func (*HibernateRequest) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{15}
}

func (x *HibernateRequest) GetClusterConfig() *ClusterConfig {
	if x != nil {
		return x.ClusterConfig
	}
	return nil
}

func (x *HibernateRequest) GetObjectIdentifier() []*ObjectIdentifier {
	if x != nil {
		return x.ObjectIdentifier
	}
	return nil
}

type ObjectIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group     string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Kind      string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Version   string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ObjectIdentifier) Reset() {
	*x = ObjectIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectIdentifier) ProtoMessage() {}

func (x *ObjectIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectIdentifier.ProtoReflect.Descriptor instead.
func (*ObjectIdentifier) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{16}
}

func (x *ObjectIdentifier) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ObjectIdentifier) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ObjectIdentifier) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ObjectIdentifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObjectIdentifier) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type HibernateStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetObject *ObjectIdentifier `protobuf:"bytes,1,opt,name=targetObject,proto3" json:"targetObject,omitempty"`
	Success      bool              `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMsg     string            `protobuf:"bytes,3,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *HibernateStatus) Reset() {
	*x = HibernateStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HibernateStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HibernateStatus) ProtoMessage() {}

func (x *HibernateStatus) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HibernateStatus.ProtoReflect.Descriptor instead.
func (*HibernateStatus) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{17}
}

func (x *HibernateStatus) GetTargetObject() *ObjectIdentifier {
	if x != nil {
		return x.TargetObject
	}
	return nil
}

func (x *HibernateStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HibernateStatus) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

type HibernateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status []*HibernateStatus `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
}

func (x *HibernateResponse) Reset() {
	*x = HibernateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HibernateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HibernateResponse) ProtoMessage() {}

func (x *HibernateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HibernateResponse.ProtoReflect.Descriptor instead.
func (*HibernateResponse) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{18}
}

func (x *HibernateResponse) GetStatus() []*HibernateStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type HelmAppDeploymentDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChartMetadata *ChartMetadata       `protobuf:"bytes,1,opt,name=chartMetadata,proto3" json:"chartMetadata,omitempty"`
	DockerImages  []string             `protobuf:"bytes,2,rep,name=dockerImages,proto3" json:"dockerImages,omitempty"`
	Version       int32                `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	DeployedAt    *timestamp.Timestamp `protobuf:"bytes,4,opt,name=deployedAt,proto3" json:"deployedAt,omitempty"`
}

func (x *HelmAppDeploymentDetail) Reset() {
	*x = HelmAppDeploymentDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmAppDeploymentDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmAppDeploymentDetail) ProtoMessage() {}

func (x *HelmAppDeploymentDetail) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmAppDeploymentDetail.ProtoReflect.Descriptor instead.
func (*HelmAppDeploymentDetail) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{19}
}

func (x *HelmAppDeploymentDetail) GetChartMetadata() *ChartMetadata {
	if x != nil {
		return x.ChartMetadata
	}
	return nil
}

func (x *HelmAppDeploymentDetail) GetDockerImages() []string {
	if x != nil {
		return x.DockerImages
	}
	return nil
}

func (x *HelmAppDeploymentDetail) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *HelmAppDeploymentDetail) GetDeployedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeployedAt
	}
	return nil
}

type HelmAppDeploymentHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentHistory []*HelmAppDeploymentDetail `protobuf:"bytes,1,rep,name=deploymentHistory,proto3" json:"deploymentHistory,omitempty"`
}

func (x *HelmAppDeploymentHistory) Reset() {
	*x = HelmAppDeploymentHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmAppDeploymentHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmAppDeploymentHistory) ProtoMessage() {}

func (x *HelmAppDeploymentHistory) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmAppDeploymentHistory.ProtoReflect.Descriptor instead.
func (*HelmAppDeploymentHistory) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{20}
}

func (x *HelmAppDeploymentHistory) GetDeploymentHistory() []*HelmAppDeploymentDetail {
	if x != nil {
		return x.DeploymentHistory
	}
	return nil
}

type ReleaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeployedAppDetail *DeployedAppDetail `protobuf:"bytes,1,opt,name=deployedAppDetail,proto3" json:"deployedAppDetail,omitempty"`
	DefaultValues     string             `protobuf:"bytes,2,opt,name=defaultValues,proto3" json:"defaultValues,omitempty"`
	OverrideValues    string             `protobuf:"bytes,3,opt,name=overrideValues,proto3" json:"overrideValues,omitempty"`
	MergedValues      string             `protobuf:"bytes,4,opt,name=mergedValues,proto3" json:"mergedValues,omitempty"`
	Readme            string             `protobuf:"bytes,5,opt,name=readme,proto3" json:"readme,omitempty"`
}

func (x *ReleaseInfo) Reset() {
	*x = ReleaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseInfo) ProtoMessage() {}

func (x *ReleaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseInfo.ProtoReflect.Descriptor instead.
func (*ReleaseInfo) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{21}
}

func (x *ReleaseInfo) GetDeployedAppDetail() *DeployedAppDetail {
	if x != nil {
		return x.DeployedAppDetail
	}
	return nil
}

func (x *ReleaseInfo) GetDefaultValues() string {
	if x != nil {
		return x.DefaultValues
	}
	return ""
}

func (x *ReleaseInfo) GetOverrideValues() string {
	if x != nil {
		return x.OverrideValues
	}
	return ""
}

func (x *ReleaseInfo) GetMergedValues() string {
	if x != nil {
		return x.MergedValues
	}
	return ""
}

func (x *ReleaseInfo) GetReadme() string {
	if x != nil {
		return x.Readme
	}
	return ""
}

type ObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterConfig    *ClusterConfig    `protobuf:"bytes,1,opt,name=clusterConfig,proto3" json:"clusterConfig,omitempty"`
	ObjectIdentifier *ObjectIdentifier `protobuf:"bytes,2,opt,name=objectIdentifier,proto3" json:"objectIdentifier,omitempty"`
	ReleaseName      string            `protobuf:"bytes,3,opt,name=releaseName,proto3" json:"releaseName,omitempty"`
	ReleaseNamespace string            `protobuf:"bytes,4,opt,name=releaseNamespace,proto3" json:"releaseNamespace,omitempty"`
}

func (x *ObjectRequest) Reset() {
	*x = ObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectRequest) ProtoMessage() {}

func (x *ObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectRequest.ProtoReflect.Descriptor instead.
func (*ObjectRequest) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{22}
}

func (x *ObjectRequest) GetClusterConfig() *ClusterConfig {
	if x != nil {
		return x.ClusterConfig
	}
	return nil
}

func (x *ObjectRequest) GetObjectIdentifier() *ObjectIdentifier {
	if x != nil {
		return x.ObjectIdentifier
	}
	return nil
}

func (x *ObjectRequest) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *ObjectRequest) GetReleaseNamespace() string {
	if x != nil {
		return x.ReleaseNamespace
	}
	return ""
}

type DesiredManifestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manifest string `protobuf:"bytes,1,opt,name=manifest,proto3" json:"manifest,omitempty"`
}

func (x *DesiredManifestResponse) Reset() {
	*x = DesiredManifestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesiredManifestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesiredManifestResponse) ProtoMessage() {}

func (x *DesiredManifestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesiredManifestResponse.ProtoReflect.Descriptor instead.
func (*DesiredManifestResponse) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{23}
}

func (x *DesiredManifestResponse) GetManifest() string {
	if x != nil {
		return x.Manifest
	}
	return ""
}

type UninstallReleaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UninstallReleaseResponse) Reset() {
	*x = UninstallReleaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UninstallReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallReleaseResponse) ProtoMessage() {}

func (x *UninstallReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallReleaseResponse.ProtoReflect.Descriptor instead.
func (*UninstallReleaseResponse) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{24}
}

func (x *UninstallReleaseResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ReleaseIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterConfig    *ClusterConfig `protobuf:"bytes,1,opt,name=clusterConfig,proto3" json:"clusterConfig,omitempty"`
	ReleaseName      string         `protobuf:"bytes,2,opt,name=releaseName,proto3" json:"releaseName,omitempty"`
	ReleaseNamespace string         `protobuf:"bytes,3,opt,name=releaseNamespace,proto3" json:"releaseNamespace,omitempty"`
}

func (x *ReleaseIdentifier) Reset() {
	*x = ReleaseIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseIdentifier) ProtoMessage() {}

func (x *ReleaseIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseIdentifier.ProtoReflect.Descriptor instead.
func (*ReleaseIdentifier) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{25}
}

func (x *ReleaseIdentifier) GetClusterConfig() *ClusterConfig {
	if x != nil {
		return x.ClusterConfig
	}
	return nil
}

func (x *ReleaseIdentifier) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *ReleaseIdentifier) GetReleaseNamespace() string {
	if x != nil {
		return x.ReleaseNamespace
	}
	return ""
}

type UpgradeReleaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseIdentifier *ReleaseIdentifier `protobuf:"bytes,1,opt,name=releaseIdentifier,proto3" json:"releaseIdentifier,omitempty"`
	ValuesYaml        string             `protobuf:"bytes,2,opt,name=valuesYaml,proto3" json:"valuesYaml,omitempty"`
}

func (x *UpgradeReleaseRequest) Reset() {
	*x = UpgradeReleaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeReleaseRequest) ProtoMessage() {}

func (x *UpgradeReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeReleaseRequest.ProtoReflect.Descriptor instead.
func (*UpgradeReleaseRequest) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{26}
}

func (x *UpgradeReleaseRequest) GetReleaseIdentifier() *ReleaseIdentifier {
	if x != nil {
		return x.ReleaseIdentifier
	}
	return nil
}

func (x *UpgradeReleaseRequest) GetValuesYaml() string {
	if x != nil {
		return x.ValuesYaml
	}
	return ""
}

type UpgradeReleaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpgradeReleaseResponse) Reset() {
	*x = UpgradeReleaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeReleaseResponse) ProtoMessage() {}

func (x *UpgradeReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeReleaseResponse.ProtoReflect.Descriptor instead.
func (*UpgradeReleaseResponse) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{27}
}

func (x *UpgradeReleaseResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeploymentDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseIdentifier *ReleaseIdentifier `protobuf:"bytes,1,opt,name=releaseIdentifier,proto3" json:"releaseIdentifier,omitempty"`
	DeploymentVersion int32              `protobuf:"varint,2,opt,name=deploymentVersion,proto3" json:"deploymentVersion,omitempty"`
}

func (x *DeploymentDetailRequest) Reset() {
	*x = DeploymentDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentDetailRequest) ProtoMessage() {}

func (x *DeploymentDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentDetailRequest.ProtoReflect.Descriptor instead.
func (*DeploymentDetailRequest) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{28}
}

func (x *DeploymentDetailRequest) GetReleaseIdentifier() *ReleaseIdentifier {
	if x != nil {
		return x.ReleaseIdentifier
	}
	return nil
}

func (x *DeploymentDetailRequest) GetDeploymentVersion() int32 {
	if x != nil {
		return x.DeploymentVersion
	}
	return 0
}

type DeploymentDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manifest   string `protobuf:"bytes,1,opt,name=manifest,proto3" json:"manifest,omitempty"`
	ValuesYaml string `protobuf:"bytes,2,opt,name=valuesYaml,proto3" json:"valuesYaml,omitempty"`
}

func (x *DeploymentDetailResponse) Reset() {
	*x = DeploymentDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentDetailResponse) ProtoMessage() {}

func (x *DeploymentDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentDetailResponse.ProtoReflect.Descriptor instead.
func (*DeploymentDetailResponse) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{29}
}

func (x *DeploymentDetailResponse) GetManifest() string {
	if x != nil {
		return x.Manifest
	}
	return ""
}

func (x *DeploymentDetailResponse) GetValuesYaml() string {
	if x != nil {
		return x.ValuesYaml
	}
	return ""
}

type ChartRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url      string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ChartRepository) Reset() {
	*x = ChartRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartRepository) ProtoMessage() {}

func (x *ChartRepository) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartRepository.ProtoReflect.Descriptor instead.
func (*ChartRepository) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{30}
}

func (x *ChartRepository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChartRepository) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ChartRepository) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ChartRepository) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type InstallReleaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseIdentifier *ReleaseIdentifier `protobuf:"bytes,1,opt,name=releaseIdentifier,proto3" json:"releaseIdentifier,omitempty"`
	ChartName         string             `protobuf:"bytes,2,opt,name=chartName,proto3" json:"chartName,omitempty"`
	ChartVersion      string             `protobuf:"bytes,3,opt,name=chartVersion,proto3" json:"chartVersion,omitempty"`
	ValuesYaml        string             `protobuf:"bytes,4,opt,name=valuesYaml,proto3" json:"valuesYaml,omitempty"`
	ChartRepository   *ChartRepository   `protobuf:"bytes,5,opt,name=chartRepository,proto3" json:"chartRepository,omitempty"`
}

func (x *InstallReleaseRequest) Reset() {
	*x = InstallReleaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallReleaseRequest) ProtoMessage() {}

func (x *InstallReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallReleaseRequest.ProtoReflect.Descriptor instead.
func (*InstallReleaseRequest) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{31}
}

func (x *InstallReleaseRequest) GetReleaseIdentifier() *ReleaseIdentifier {
	if x != nil {
		return x.ReleaseIdentifier
	}
	return nil
}

func (x *InstallReleaseRequest) GetChartName() string {
	if x != nil {
		return x.ChartName
	}
	return ""
}

func (x *InstallReleaseRequest) GetChartVersion() string {
	if x != nil {
		return x.ChartVersion
	}
	return ""
}

func (x *InstallReleaseRequest) GetValuesYaml() string {
	if x != nil {
		return x.ValuesYaml
	}
	return ""
}

func (x *InstallReleaseRequest) GetChartRepository() *ChartRepository {
	if x != nil {
		return x.ChartRepository
	}
	return nil
}

type InstallReleaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *InstallReleaseResponse) Reset() {
	*x = InstallReleaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallReleaseResponse) ProtoMessage() {}

func (x *InstallReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallReleaseResponse.ProtoReflect.Descriptor instead.
func (*InstallReleaseResponse) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{32}
}

func (x *InstallReleaseResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type BooleanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *BooleanResponse) Reset() {
	*x = BooleanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooleanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanResponse) ProtoMessage() {}

func (x *BooleanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanResponse.ProtoReflect.Descriptor instead.
func (*BooleanResponse) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{33}
}

func (x *BooleanResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type RollbackReleaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseIdentifier *ReleaseIdentifier `protobuf:"bytes,1,opt,name=releaseIdentifier,proto3" json:"releaseIdentifier,omitempty"`
	Version           int32              `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *RollbackReleaseRequest) Reset() {
	*x = RollbackReleaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_applist_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackReleaseRequest) ProtoMessage() {}

func (x *RollbackReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_applist_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackReleaseRequest.ProtoReflect.Descriptor instead.
func (*RollbackReleaseRequest) Descriptor() ([]byte, []int) {
	return file_grpc_applist_proto_rawDescGZIP(), []int{34}
}

func (x *RollbackReleaseRequest) GetReleaseIdentifier() *ReleaseIdentifier {
	if x != nil {
		return x.ReleaseIdentifier
	}
	return nil
}

func (x *RollbackReleaseRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

var File_grpc_applist_proto protoreflect.FileDescriptor

var file_grpc_applist_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x3c, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x22,
	0xa7, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41, 0x70, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41,
	0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x11, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41, 0x70, 0x70, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x22, 0xaa, 0x02, 0x0a, 0x11, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x68, 0x61, 0x72, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x41, 0x0a, 0x11, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x11, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x3e, 0x0a, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x12, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x41,
	0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xf5, 0x02, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x34, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0d,
	0x63, 0x68, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a,
	0x14, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x72, 0x65, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x12, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x12, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x63, 0x0a,
	0x0d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xb7, 0x01, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x6b, 0x0a, 0x14,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x0b, 0x70, 0x6f, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x70, 0x6f,
	0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa4, 0x03, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x2c, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x73,
	0x12, 0x3f, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x48, 0x69, 0x62, 0x65, 0x72, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x48, 0x69, 0x62, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x42, 0x65, 0x48,
	0x69, 0x62, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x63, 0x61, 0x6e, 0x42, 0x65, 0x48, 0x69, 0x62, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x64,
	0x22, 0x40, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x95, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x91, 0x01,
	0x0a, 0x0b, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x69,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x73, 0x4e, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65,
	0x77, 0x22, 0x87, 0x01, 0x0a, 0x10, 0x48, 0x69, 0x62, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a, 0x10,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x88, 0x01, 0x0a, 0x10,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x7e, 0x0a, 0x0f, 0x48, 0x69, 0x62, 0x65, 0x72, 0x6e,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x3d, 0x0a, 0x11, 0x48, 0x69, 0x62, 0x65, 0x72, 0x6e,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x48, 0x69,
	0x62, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x17, 0x48, 0x65, 0x6c, 0x6d, 0x41, 0x70,
	0x70, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x34, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x62, 0x0a, 0x18, 0x48, 0x65, 0x6c, 0x6d, 0x41, 0x70, 0x70, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x46, 0x0a,
	0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x48, 0x65, 0x6c, 0x6d, 0x41,
	0x70, 0x70, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0xd9, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x64, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41, 0x70, 0x70, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41, 0x70,
	0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72,
	0x67, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x64, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x6d,
	0x65, 0x22, 0xd2, 0x01, 0x0a, 0x0d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a, 0x10, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x35, 0x0a, 0x17, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65,
	0x64, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x22, 0x34, 0x0a,
	0x18, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0d, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x79, 0x0a,
	0x15, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x11, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x59, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x59, 0x61, 0x6d, 0x6c, 0x22, 0x32, 0x0a, 0x16, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x89, 0x01, 0x0a,
	0x17, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x11, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x59, 0x61, 0x6d, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x59, 0x61, 0x6d, 0x6c,
	0x22, 0x6f, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0xf7, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x11, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x11, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x68, 0x61, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x59, 0x61, 0x6d, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x59, 0x61, 0x6d, 0x6c, 0x12,
	0x3a, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x32, 0x0a, 0x16, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x29, 0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x74, 0x0a, 0x16, 0x52, 0x6f,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x11, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x32, 0x99, 0x07, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0f, 0x2e, 0x41, 0x70,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x2f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x11, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x09, 0x48, 0x69, 0x62, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65,
	0x12, 0x11, 0x2e, 0x48, 0x69, 0x62, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x48, 0x69, 0x62, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0b, 0x55, 0x6e, 0x48,
	0x69, 0x62, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x48, 0x69, 0x62, 0x65, 0x72,
	0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x48, 0x69,
	0x62, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x46, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x11, 0x2e, 0x41, 0x70, 0x70, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x48,
	0x65, 0x6c, 0x6d, 0x41, 0x70, 0x70, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x11, 0x2e, 0x41, 0x70, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x10, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x12, 0x12, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x19, 0x2e, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x16, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x18, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x16, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x1b,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x43, 0x68, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x12, 0x49, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x10, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0f,
	0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12,
	0x17, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x33, 0x5a, 0x31,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x76, 0x74, 0x72,
	0x6f, 0x6e, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x6c, 0x69, 0x6e, 0x6b,
	0x2f, 0x62, 0x65, 0x61, 0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_applist_proto_rawDescOnce sync.Once
	file_grpc_applist_proto_rawDescData = file_grpc_applist_proto_rawDesc
)

func file_grpc_applist_proto_rawDescGZIP() []byte {
	file_grpc_applist_proto_rawDescOnce.Do(func() {
		file_grpc_applist_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_applist_proto_rawDescData)
	})
	return file_grpc_applist_proto_rawDescData
}

var file_grpc_applist_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_grpc_applist_proto_goTypes = []interface{}{
	(*ClusterConfig)(nil),            // 0: ClusterConfig
	(*AppListRequest)(nil),           // 1: AppListRequest
	(*DeployedAppList)(nil),          // 2: DeployedAppList
	(*DeployedAppDetail)(nil),        // 3: DeployedAppDetail
	(*EnvironmentDetails)(nil),       // 4: EnvironmentDetails
	(*AppDetailRequest)(nil),         // 5: AppDetailRequest
	(*AppDetail)(nil),                // 6: AppDetail
	(*ReleaseStatus)(nil),            // 7: ReleaseStatus
	(*ChartMetadata)(nil),            // 8: ChartMetadata
	(*ResourceTreeResponse)(nil),     // 9: ResourceTreeResponse
	(*ResourceNode)(nil),             // 10: ResourceNode
	(*HealthStatus)(nil),             // 11: HealthStatus
	(*ResourceNetworkingInfo)(nil),   // 12: ResourceNetworkingInfo
	(*ResourceRef)(nil),              // 13: ResourceRef
	(*PodMetadata)(nil),              // 14: PodMetadata
	(*HibernateRequest)(nil),         // 15: HibernateRequest
	(*ObjectIdentifier)(nil),         // 16: ObjectIdentifier
	(*HibernateStatus)(nil),          // 17: HibernateStatus
	(*HibernateResponse)(nil),        // 18: HibernateResponse
	(*HelmAppDeploymentDetail)(nil),  // 19: HelmAppDeploymentDetail
	(*HelmAppDeploymentHistory)(nil), // 20: HelmAppDeploymentHistory
	(*ReleaseInfo)(nil),              // 21: ReleaseInfo
	(*ObjectRequest)(nil),            // 22: ObjectRequest
	(*DesiredManifestResponse)(nil),  // 23: DesiredManifestResponse
	(*UninstallReleaseResponse)(nil), // 24: UninstallReleaseResponse
	(*ReleaseIdentifier)(nil),        // 25: ReleaseIdentifier
	(*UpgradeReleaseRequest)(nil),    // 26: UpgradeReleaseRequest
	(*UpgradeReleaseResponse)(nil),   // 27: UpgradeReleaseResponse
	(*DeploymentDetailRequest)(nil),  // 28: DeploymentDetailRequest
	(*DeploymentDetailResponse)(nil), // 29: DeploymentDetailResponse
	(*ChartRepository)(nil),          // 30: ChartRepository
	(*InstallReleaseRequest)(nil),    // 31: InstallReleaseRequest
	(*InstallReleaseResponse)(nil),   // 32: InstallReleaseResponse
	(*BooleanResponse)(nil),          // 33: BooleanResponse
	(*RollbackReleaseRequest)(nil),   // 34: RollbackReleaseRequest
	nil,                              // 35: ResourceNetworkingInfo.LabelsEntry
	(*timestamp.Timestamp)(nil),      // 36: google.protobuf.Timestamp
}
var file_grpc_applist_proto_depIdxs = []int32{
	0,  // 0: AppListRequest.clusters:type_name -> ClusterConfig
	3,  // 1: DeployedAppList.DeployedAppDetail:type_name -> DeployedAppDetail
	4,  // 2: DeployedAppDetail.environmentDetail:type_name -> EnvironmentDetails
	36, // 3: DeployedAppDetail.LastDeployed:type_name -> google.protobuf.Timestamp
	0,  // 4: AppDetailRequest.clusterConfig:type_name -> ClusterConfig
	7,  // 5: AppDetail.releaseStatus:type_name -> ReleaseStatus
	36, // 6: AppDetail.lastDeployed:type_name -> google.protobuf.Timestamp
	8,  // 7: AppDetail.chartMetadata:type_name -> ChartMetadata
	9,  // 8: AppDetail.resourceTreeResponse:type_name -> ResourceTreeResponse
	4,  // 9: AppDetail.environmentDetails:type_name -> EnvironmentDetails
	10, // 10: ResourceTreeResponse.nodes:type_name -> ResourceNode
	14, // 11: ResourceTreeResponse.podMetadata:type_name -> PodMetadata
	13, // 12: ResourceNode.parentRefs:type_name -> ResourceRef
	12, // 13: ResourceNode.networkingInfo:type_name -> ResourceNetworkingInfo
	11, // 14: ResourceNode.health:type_name -> HealthStatus
	35, // 15: ResourceNetworkingInfo.labels:type_name -> ResourceNetworkingInfo.LabelsEntry
	0,  // 16: HibernateRequest.clusterConfig:type_name -> ClusterConfig
	16, // 17: HibernateRequest.objectIdentifier:type_name -> ObjectIdentifier
	16, // 18: HibernateStatus.targetObject:type_name -> ObjectIdentifier
	17, // 19: HibernateResponse.status:type_name -> HibernateStatus
	8,  // 20: HelmAppDeploymentDetail.chartMetadata:type_name -> ChartMetadata
	36, // 21: HelmAppDeploymentDetail.deployedAt:type_name -> google.protobuf.Timestamp
	19, // 22: HelmAppDeploymentHistory.deploymentHistory:type_name -> HelmAppDeploymentDetail
	3,  // 23: ReleaseInfo.deployedAppDetail:type_name -> DeployedAppDetail
	0,  // 24: ObjectRequest.clusterConfig:type_name -> ClusterConfig
	16, // 25: ObjectRequest.objectIdentifier:type_name -> ObjectIdentifier
	0,  // 26: ReleaseIdentifier.clusterConfig:type_name -> ClusterConfig
	25, // 27: UpgradeReleaseRequest.releaseIdentifier:type_name -> ReleaseIdentifier
	25, // 28: DeploymentDetailRequest.releaseIdentifier:type_name -> ReleaseIdentifier
	25, // 29: InstallReleaseRequest.releaseIdentifier:type_name -> ReleaseIdentifier
	30, // 30: InstallReleaseRequest.chartRepository:type_name -> ChartRepository
	25, // 31: RollbackReleaseRequest.releaseIdentifier:type_name -> ReleaseIdentifier
	1,  // 32: ApplicationService.ListApplications:input_type -> AppListRequest
	5,  // 33: ApplicationService.GetAppDetail:input_type -> AppDetailRequest
	15, // 34: ApplicationService.Hibernate:input_type -> HibernateRequest
	15, // 35: ApplicationService.UnHibernate:input_type -> HibernateRequest
	5,  // 36: ApplicationService.GetDeploymentHistory:input_type -> AppDetailRequest
	5,  // 37: ApplicationService.GetValuesYaml:input_type -> AppDetailRequest
	22, // 38: ApplicationService.GetDesiredManifest:input_type -> ObjectRequest
	25, // 39: ApplicationService.UninstallRelease:input_type -> ReleaseIdentifier
	26, // 40: ApplicationService.UpgradeRelease:input_type -> UpgradeReleaseRequest
	28, // 41: ApplicationService.GetDeploymentDetail:input_type -> DeploymentDetailRequest
	31, // 42: ApplicationService.InstallRelease:input_type -> InstallReleaseRequest
	31, // 43: ApplicationService.UpgradeReleaseWithChartInfo:input_type -> InstallReleaseRequest
	25, // 44: ApplicationService.IsReleaseInstalled:input_type -> ReleaseIdentifier
	34, // 45: ApplicationService.RollbackRelease:input_type -> RollbackReleaseRequest
	2,  // 46: ApplicationService.ListApplications:output_type -> DeployedAppList
	6,  // 47: ApplicationService.GetAppDetail:output_type -> AppDetail
	18, // 48: ApplicationService.Hibernate:output_type -> HibernateResponse
	18, // 49: ApplicationService.UnHibernate:output_type -> HibernateResponse
	20, // 50: ApplicationService.GetDeploymentHistory:output_type -> HelmAppDeploymentHistory
	21, // 51: ApplicationService.GetValuesYaml:output_type -> ReleaseInfo
	23, // 52: ApplicationService.GetDesiredManifest:output_type -> DesiredManifestResponse
	24, // 53: ApplicationService.UninstallRelease:output_type -> UninstallReleaseResponse
	27, // 54: ApplicationService.UpgradeRelease:output_type -> UpgradeReleaseResponse
	29, // 55: ApplicationService.GetDeploymentDetail:output_type -> DeploymentDetailResponse
	32, // 56: ApplicationService.InstallRelease:output_type -> InstallReleaseResponse
	27, // 57: ApplicationService.UpgradeReleaseWithChartInfo:output_type -> UpgradeReleaseResponse
	33, // 58: ApplicationService.IsReleaseInstalled:output_type -> BooleanResponse
	33, // 59: ApplicationService.RollbackRelease:output_type -> BooleanResponse
	46, // [46:60] is the sub-list for method output_type
	32, // [32:46] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_grpc_applist_proto_init() }
func file_grpc_applist_proto_init() {
	if File_grpc_applist_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_applist_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployedAppList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployedAppDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceTreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceNetworkingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HibernateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HibernateStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HibernateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelmAppDeploymentDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelmAppDeploymentHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DesiredManifestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UninstallReleaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeReleaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeReleaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallReleaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallReleaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooleanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_applist_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollbackReleaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_applist_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_applist_proto_goTypes,
		DependencyIndexes: file_grpc_applist_proto_depIdxs,
		MessageInfos:      file_grpc_applist_proto_msgTypes,
	}.Build()
	File_grpc_applist_proto = out.File
	file_grpc_applist_proto_rawDesc = nil
	file_grpc_applist_proto_goTypes = nil
	file_grpc_applist_proto_depIdxs = nil
}
