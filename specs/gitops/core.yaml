openapi: "3.0.0"
info:
  version: 1.0.0
  title: GitOps Configuration Management
  description: Devtron API for GitOps management
  termsOfService: https://devtron.ai/terms/
  contact:
    name: Devtron Labs
    email: support@devtron.ai
    url: https://devtron.ai
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080
paths:
  /orchestrator/gitops/config:
    post:
      description: Create or save new GitOps configuration and validate before saving
      operationId: CreateGitOpsConfig
      requestBody:
        description: GitOps configuration details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitOpsConfigDto'
      responses:
        '200':
          description: Successfully created and validated GitOps configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorGitOpsConfigResponse'
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Update GitOps configuration and validate before saving
      operationId: UpdateGitOpsConfig
      requestBody:
        description: GitOps configuration details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitOpsConfigDto'
      responses:
        '200':
          description: Successfully updated and validated GitOps configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorGitOpsConfigResponse'
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      description: Get all GitOps configurations
      operationId: GetAllGitOpsConfig
      responses:
        '200':
          description: List of GitOps configurations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GitOpsConfigDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orchestrator/gitops/config/{id}:
    get:
      description: Get GitOps configuration by ID
      operationId: GetGitOpsConfigById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            description: GitOps configuration ID
      responses:
        '200':
          description: GitOps configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitOpsConfigDto'
        '400':
          description: Bad Request - Invalid ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orchestrator/gitops/config-by-provider:
    get:
      description: Get GitOps configuration by provider
      operationId: GetGitOpsConfigByProvider
      parameters:
        - name: provider
          in: query
          required: true
          schema:
            type: string
            description: Git provider (GITLAB, GITHUB, AZURE_DEVOPS, BITBUCKET_CLOUD)
      responses:
        '200':
          description: GitOps configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitOpsConfigDto'
        '400':
          description: Bad Request - Invalid provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orchestrator/gitops/configured:
    get:
      description: Check if GitOps is configured
      operationId: GitOpsConfigured
      responses:
        '200':
          description: GitOps configuration status
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
                    description: Whether GitOps is configured
                  allowCustomRepository:
                    type: boolean
                    description: Whether custom repositories are allowed
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orchestrator/gitops/validate:
    post:
      description: Validate GitOps configuration
      operationId: GitOpsValidator
      requestBody:
        description: GitOps configuration to validate
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitOpsConfigDto'
      responses:
        '200':
          description: Validation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorGitOpsConfigResponse'
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    GitOpsConfigDto:
      type: object
      properties:
        id:
          type: integer
          description: GitOps configuration ID
        provider:
          type: string
          description: Git provider (GITLAB, GITHUB, AZURE_DEVOPS, BITBUCKET_CLOUD)
          enum: [GITLAB, GITHUB, AZURE_DEVOPS, BITBUCKET_CLOUD]
        username:
          type: string
          description: Git username
        token:
          type: string
          description: Git access token
        gitLabGroupId:
          type: string
          description: GitLab group ID
        gitHubOrgId:
          type: string
          description: GitHub organization ID
        host:
          type: string
          description: Git host URL
        active:
          type: boolean
          description: Whether this configuration is active
        azureProjectName:
          type: string
          description: Azure DevOps project name
        bitBucketWorkspaceId:
          type: string
          description: Bitbucket workspace ID
        bitBucketProjectKey:
          type: string
          description: Bitbucket project key
        allowCustomRepository:
          type: boolean
          description: Whether custom repositories are allowed
        enableTLSVerification:
          type: boolean
          description: Whether TLS verification is enabled
        tlsConfig:
          $ref: '#/components/schemas/TLSConfig'
        isCADataPresent:
          type: boolean
          description: Whether CA data is present
        isTLSCertDataPresent:
          type: boolean
          description: Whether TLS certificate data is present
        isTLSKeyDataPresent:
          type: boolean
          description: Whether TLS key data is present

    TLSConfig:
      type: object
      properties:
        tlsKeyData:
          type: string
          description: TLS key data
        tlsCertData:
          type: string
          description: TLS certificate data
        caData:
          type: string
          description: CA certificate data

    DetailedErrorGitOpsConfigResponse:
      type: object
      properties:
        successfulStages:
          type: array
          items:
            type: string
          description: List of successful validation stages
        stageErrorMap:
          type: object
          additionalProperties:
            type: string
          description: Map of stage names to error messages
        validatedOn:
          type: string
          format: date-time
          description: Validation timestamp
        deleteRepoFailed:
          type: boolean
          description: Whether repository deletion failed
        validationSkipped:
          type: boolean
          description: Whether validation was skipped

    ErrorResponse:
      required:
        - code
        - status
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        status:
          type: string
          description: Error message
        errors:
          type: array
          description: List of errors
          items:
            $ref: '#/components/schemas/Error'

    Error:
      required:
        - code
        - status
      properties:
        code:
          type: integer
          format: int32
          description: Error internal code
        internalMessage:
          type: string
          description: Error internal message
        userMessage:
          type: string
          description: Error user message 