openapi: "3.0.2"
info:
  title: "Global Plugin Discovery"
  description: >-
    Provide functionality to user to use plugins in pre/post ci steps.
  version: "1.0.0"

paths:
  /orchestrator/plugin/global/list:
    get:
      description: Get list of all global plugins
      operationId: GetAllPluginsAtGlobalLevel
      parameters:
        - name: appId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully return all plugins
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                  status:
                    type: string
                    description: status
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/PluginListComponentDto'
        '400':
          description: Bad Request. Input Validation error/wrong request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Get list of all global plugins by filters
      operationId: GetAllPluginsAtGlobalLevelByFilters
      requestBody:
        description: A JSON object containing the filter details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginListFilters'
      responses:
        '200':
          description: Successfully return all filtered plugins
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                  status:
                    type: string
                    description: status
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/PluginListComponentDto'
        '400':
          description: Bad Request. Input Validation error/wrong request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/plugin/global/list/filter/options:
    get:
      description: Get list of all filter options for plugins, i.e. tags and types
      operationId: GetAllPluginFilterOptions
      responses:
        '200':
          description: Successfully return all filter options
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                  status:
                    type: string
                    description: status
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/PluginFilterOptions'
        '400':
          description: Bad Request. Input Validation error/wrong request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orchestrator/plugin/global/list/global-variable:
    get:
      description: Get list of all global variables
      operationId: GetAllGlobalVaariables
      parameters:
        - name: appId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully return all global variables
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: status code
                  status:
                    type: string
                    description: status
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/GlobalVariable'
        '400':
          description: Bad Request. Input Validation error/wrong request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:
  schemas:
    PluginListComponentDto:
      type: object
      properties:
        id:
          type: integer
          description: Plugin ID
        name:
          type: string
          description: Plugin name
        type:
          type: string
          description: Plugin type (SHARED/PRESET)
        description:
          type: string
          description: Plugin description
        icon:
          type: string
          description: Plugin icon
        tags:
          type: array
          items:
            type: string
          description: Plugin tags
        inputVariables:
          type: array
          items:
            $ref: '#/components/schemas/PluginVariableDto'
          description: Input variables for the plugin
        outputVariables:
          type: array
          items:
            $ref: '#/components/schemas/PluginVariableDto'
          description: Output variables from the plugin
    PluginDetailDto:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/PluginMetadataDto'
        inputVariables:
          type: array
          items:
            $ref: '#/components/schemas/PluginVariableDto'
          description: Input variables for the plugin
        outputVariables:
          type: array
          items:
            $ref: '#/components/schemas/PluginVariableDto'
          description: Output variables from the plugin
    PluginMetadataDto:
      type: object
      properties:
        id:
          type: integer
          description: Plugin ID
        name:
          type: string
          description: Plugin name
        type:
          type: string
          description: Plugin type (SHARED/PRESET)
        description:
          type: string
          description: Plugin description
        icon:
          type: string
          description: Plugin icon
        tags:
          type: array
          items:
            type: string
          description: Plugin tags
    PluginVariableDto:
      type: object
      properties:
        name:
          type: string
          description: Variable name
        description:
          type: string
          description: Variable description
        type:
          type: string
          description: Variable type
        format:
          type: string
          description: Variable format
        required:
          type: boolean
          description: Whether the variable is required
        defaultValue:
          type: string
          description: Default value for the variable
    PluginListFilters:
      type: object
      properties:
        searchKey:
          type: string
          description: Search key to filter plugins
        tags:
          type: array
          items:
            type: string
          description: Tags to filter plugins
        limit:
          type: integer
          description: Number of results to return
        offset:
          type: integer
          description: Offset for pagination
    PluginFilterOptions:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
          description: Available plugin tags
        types:
          type: array
          items:
            type: string
          description: Available plugin types
    GlobalVariable:
      type: object
      properties:
        name:
          type: string
          description: Variable name
        value:
          type: string
          description: Variable value
        description:
          type: string
          description: Variable description

    DockerBuildScript:
      type: object
      properties:
        id:
          type: integer
        index:
          type: integer
        name:
          type: string
        outputLocation:
          type: string
        script:
          type: string
    BuildStageDto:
      type: object
      properties:
        id:
          type: integer
          description: pipelineStageId(every stage is given a Id)
        steps:
          type: array
          items:
            $ref: '#/components/schemas/stageStepDetails'
    stageStepDetails:
      type: object
      properties:
        id:
          type: integer
        index:
          type: integer
          description: sequence of step in all steps
        name:
          type: string
        description:
          type: string
        stepType:
          type: string
          example:
            - "INLINE"
            - "REF_PLUGIN"
        outputDirectoryPath:
          type: array
          items:
            type: string
        inlineStepDetail:
          $ref: '#/components/schemas/InlineStepDetail'
        pluginRefStepDetail:
          $ref: '#/components/schemas/PluginRefStepDetail'
    InlineStepDetail:
      type: object
      properties:
        scriptType:
          type: string
          example:
            - "SHELL"
            - "DOCKERFILE"
            - "CONTAINER_IMAGE"
        script:
          type: string
        storeScriptAt:
          type: string
        dockerFileExists:
          type: boolean
        mountPath:
          type: string
        mountCodeToContainer:
          type: boolean
        mountCodeToContainerPath:
          type: string
        mountDirectoryFromHost:
          type: boolean
        containerImagePath:
          type: string
        imagePullSecretType:
          type: string
          example:
            - "CONTAINER_REGISTRY"
            - "SECRET_PATH"
        imagePullSecret:
          type: string
        mountPathMap:
          type: array
          items:
            $ref: '#/components/schemas/MountPathMap'
        commandArgsMap:
          type: array
          items:
            $ref: '#/components/schemas/CommandArgMap'
        portMap:
          type: array
          items:
            $ref: '#/components/schemas/PortMap'
        inputVariables:
          type: array
          items:
            $ref: '#/components/schemas/PipelineStepsVariableDto'
        outputVariables:
          type: array
          items:
            $ref: '#/components/schemas/PipelineStepsVariableDto'
        conditionDetails:
          type: array
          items:
            $ref: '#/components/schemas/ConditionDetail'
    PluginRefStepDetail:
      type: object
      properties:
        pluginId:
          type: integer
          description: id of the plugin used in the step
        inputVariables:
          type: array
          items:
            $ref: '#/components/schemas/PluginVariableDto'
        outputVariables:
          type: array
          items:
            $ref: '#/components/schemas/PluginVariableDto'
        conditionDetails:
          type: array
          items:
            $ref: '#/components/schemas/ConditionDetail'
    PipelineStepsVariableDto:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        value:
          type: integer
        format:
          type: string
          example:
            - "STRING"
            - "NUMBER"
            - "BOOL"
            - "DATE"
        description:
          type: string
        defaultValue:
          type: string
        refVariableUsed:
          type: boolean
        refVariableType:
          type: string
          example:
            - "GLOBAL"
            - "FROM_PREVIOUS_STEP"
            - "NEW"
        refVariableStepIndex:
          type: integer
        refVariableName:
          type: string
        refVariableStage:
          type: string
          example:
            - "PRE_CI"
            - "POST_CI"
    ConditionDetail:
      type: object
      properties:
        id:
          type: integer
        conditionOnVariable:
          type: string
          description: name of the variable on which condition is applied
        conditionOperator:
          type: string
        conditionType:
          type: string
          example:
            - "SKIP"
            - "TRIGGER"
            - "SUCCESS"
            - "FAIL"
        conditionalValue:
          type: string
    MountPathMap:
      type: object
      properties:
        filePathOnDisk:
          type: string
        filePathOnContainer:
          type: string
    CommandArgMap:
      type: object
      properties:
        command:
          type: string
        args:
          type: array
          items:
            type: string
    PortMap:
      type: object
      properties:
        portOnLocal:
          type: integer
        portOnContainer:
          type: integer
    Error:
      type: object
      properties:
        code:
          type: integer
          description: Error code
        status:
          type: string
          description: Error status
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: integer
                description: Error code
              internalMessage:
                type: string
                description: Internal error message
              userMessage:
                type: string
                description: User friendly error message