openapi: "3.0.3"
info:
  title: Devtron ConfigMap and Secret Management API
  description: |
    API for managing global and environment-specific ConfigMaps and Secrets in Devtron.

    **IMPORTANT PATH CORRECTIONS:**
    - Frontend uses: `/orchestrator/global/cm/{appId}`
    - Actual codebase: `/orchestrator/config/global/cm/{appId}`
    - Frontend uses: `/orchestrator/global/cs/{appId}`
    - Actual codebase: `/orchestrator/config/global/cs/{appId}`

    **MISSING PUT METHODS:**
    - The codebase only has POST methods for create/update (CMGlobalAddUpdate, CSGlobalAddUpdate)
    - PUT methods for individual updates don't exist in the current implementation
    - Frontend expects PUT methods for `/global/cm/{appId}/{id}` and `/global/cs/{appId}/{id}`

    **PAYLOAD STRUCTURE MISMATCH:**
    - Frontend sends: `{name: "string", data: {key: "value"}}`
    - Codebase expects: `ConfigDataRequest` with complex nested `ConfigData` arrays
  version: "1.0.0"
  contact:
    name: Devtron Support
    email: support@devtron.ai
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: /orchestrator
    description: Devtron Orchestrator API Server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication

paths:
  # ===== ACTUAL CODEBASE ENDPOINTS =====
  /config/global/cm:
    post:
      description: Create or update a global ConfigMap
      operationId: CMGlobalAddUpdate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigDataRequest'
      responses:
        '200':
          description: Successfully created/updated ConfigMap
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDataRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /config/environment/cm:
    post:
      description: Create or update an environment-specific ConfigMap
      operationId: CMEnvironmentAddUpdate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigDataRequest'
      responses:
        '200':
          description: Successfully created/updated ConfigMap
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDataRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/config/global/cm/{appId}:
    get:
      description: Get all global ConfigMaps for an application
      operationId: CMGlobalFetch
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved ConfigMaps
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDataRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/config/environment/cm/{appId}/{envId}:
    get:
      description: Get all environment-specific ConfigMaps for an application
      operationId: CMEnvironmentFetch
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: integer
        - name: envId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved ConfigMaps
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDataRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/config/global/cm/edit/{appId}/{id}:
    get:
      description: Get a global ConfigMap for editing
      operationId: CMGlobalFetchForEdit
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved ConfigMap
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDataRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/config/environment/cm/edit/{appId}/{envId}/{id}:
    get:
      description: Get an environment-specific ConfigMap for editing
      operationId: CMEnvironmentFetchForEdit
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: integer
        - name: envId
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved ConfigMap
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDataRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/config/global/cm/{appId}/{id}:
    delete:
      description: Delete a global ConfigMap
      operationId: CMGlobalDelete
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted ConfigMap
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/config/environment/cm/{appId}/{envId}/{id}:
    delete:
      description: Delete an environment-specific ConfigMap
      operationId: CMEnvironmentDelete
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: integer
        - name: envId
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted ConfigMap
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/config/global/cs:
    post:
      description: Create or update a global Secret
      operationId: CSGlobalAddUpdate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigDataRequest'
      responses:
        '200':
          description: Successfully created/updated Secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDataRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/config/environment/cs:
    post:
      description: Create or update an environment-specific Secret
      operationId: CSEnvironmentAddUpdate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigDataRequest'
      responses:
        '200':
          description: Successfully created/updated Secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDataRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/config/global/cs/{appId}:
    get:
      description: Get all global Secrets for an application
      operationId: CSGlobalFetch
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved Secrets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDataRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/config/environment/cs/{appId}/{envId}:
    get:
      description: Get all environment-specific Secrets for an application
      operationId: CSEnvironmentFetch
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: integer
        - name: envId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved Secrets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDataRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/config/global/cs/edit/{appId}/{id}:
    get:
      description: Get a global Secret for editing
      operationId: CSGlobalFetchForEdit
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved Secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDataRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/config/environment/cs/edit/{appId}/{envId}/{id}:
    get:
      description: Get an environment-specific Secret for editing
      operationId: CSEnvironmentFetchForEdit
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: integer
        - name: envId
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved Secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDataRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/config/global/cs/{appId}/{id}:
    delete:
      description: Delete a global Secret
      operationId: CSGlobalDelete
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted Secret
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/config/environment/cs/{appId}/{envId}/{id}:
    delete:
      description: Delete an environment-specific Secret
      operationId: CSEnvironmentDelete
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: integer
        - name: envId
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted Secret
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/config/bulk/patch:
    post:
      description: Bulk patch ConfigMaps and Secrets
      operationId: ConfigSecretBulkPatch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkPatchRequest'
      responses:
        '200':
          description: Successfully patched ConfigMaps and Secrets
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    ConfigDataRequest:
      type: object
      required:
        - appId
        - userId
        - configData
      properties:
        id:
          type: integer
          description: ID of the ConfigMap/Secret
        appId:
          type: integer
          description: ID of the application
        userId:
          type: integer
          description: ID of the user making the request
        environmentId:
          type: integer
          description: ID of the environment (for environment-specific ConfigMaps/Secrets)
        configData:
          type: array
          items:
            $ref: '#/components/schemas/ConfigData'

    ConfigData:
      type: object
      required:
        - name
        - type
      properties:
        id:
          type: integer
          description: ID of the ConfigMap/Secret
        name:
          type: string
          description: Name of the ConfigMap/Secret
        type:
          type: string
          enum: [CONFIGMAP, SECRET]
          description: Type of the configuration (ConfigMap or Secret)
        external:
          type: boolean
          description: Whether this is an external ConfigMap/Secret
        data:
          type: object
          additionalProperties:
            type: string
          description: Key-value pairs for the ConfigMap/Secret
        mountPath:
          type: string
          description: Path where the ConfigMap/Secret should be mounted
        subPath:
          type: string
          description: Subpath within the mount path
        filePermission:
          type: string
          description: File permissions for the mounted ConfigMap/Secret
        externalSecretType:
          type: string
          description: Type of external secret (for Secrets only)
        roleARN:
          type: string
          description: ARN of the role to use for external secrets (for Secrets only)
        externalSecret:
          type: array
          items:
            $ref: '#/components/schemas/ExternalSecret'
          description: External secret configuration (for Secrets only)

    ExternalSecret:
      type: object
      required:
        - name
        - key
      properties:
        name:
          type: string
          description: Name of the external secret
        key:
          type: string
          description: Key in the external secret store
        property:
          type: string
          description: Property to extract from the external secret
        isBinary:
          type: boolean
          description: Whether the secret value is binary

    BulkPatchRequest:
      type: object
      required:
        - userId
        - global
      properties:
        userId:
          type: integer
          description: ID of the user making the request
        global:
          type: boolean
          description: Whether to patch global or environment-specific ConfigMaps/Secrets
        appId:
          type: integer
          description: ID of the application
        environmentId:
          type: integer
          description: ID of the environment (for environment-specific patches)
        configData:
          type: array
          items:
            $ref: '#/components/schemas/ConfigData'

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message
