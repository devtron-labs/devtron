openapi: "3.0.0"
info:
  version: 1.0.0
  title: Application Labels Management
  description: API for managing application labels and metadata
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: /orchestrator
    description: Devtron Orchestrator API Server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /app/labels/list:
    get:
      summary: List Application Labels
      description: |
        Retrieves a list of application labels. By default, returns all labels.
        Use the `showPropagatedOnly` parameter to filter for labels where propagate = true.

        **Required Token Permission:**
        - Must have **View** access to the applications in scope.
      operationId: getAppLabels
      security:
        - bearerAuth: []
      parameters:
        - name: showPropagatedOnly
          in: query
          description: |
            If true, only returns labels where propagate = true.
            If false or not provided, all labels are returned.
          required: false
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: Successfully retrieved labels list
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: HTTP status code
                    example: 200
                  status:
                    type: string
                    description: Response status message
                    example: OK
                  result:
                    type: array
                    description: Array of label objects
                    items:
                      allOf:
                        - type: object
                          properties:
                            appId:
                              type: integer
                              description: unique application id
                            appName:
                              type: string
                              description: The name of the application
                          required:
                            - appId
                            - appName
                        - $ref: '../common/schemas.yaml#/components/schemas/AppLabel'
              examples:
                all_labels:
                  summary: All labels response
                  description: Example response when showPropagatedOnly is false or not provided
                  value:
                    code: 200
                    status: OK
                    result:
                      - key: environment
                        value: production
                        propagate: true
                        appId: 1234
                        appName: web-service
                      - key: team
                        value: backend
                        propagate: false
                        appId: 1234
                        appName: web-service
                propagated_only:
                  summary: Propagated labels only
                  description: Example response when showPropagatedOnly is true
                  value:
                    code: 200
                    status: OK
                    result:
                      - key: environment
                        value: production
                        propagate: true
                        appId: 1234
                        appName: web-service
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required or token invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 401
                  status:
                    type: string
                    example: Unauthorized
                  message:
                    type: string
                    example: Authentication token is required
        '403':
          description: Insufficient permissions to access the resource
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 403
                  status:
                    type: string
                    example: Forbidden
                  message:
                    type: string
                    example: Token does not have View access to the applications in scope
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  status:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: An unexpected error occurred
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Application Labels

  /app/meta/info/{appId}:
    get:
      summary: Get Application Meta Info
      description: Retrieves application basic info, projects and labels
      operationId: getAppMetaInfo
      security:
        - bearerAuth: []
      parameters:
        - name: appId
          in: path
          description: Application ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Application basic info, projects and labels
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: Status code
                  status:
                    type: string
                    description: Status
                  result:
                    allOf:
                      - $ref: '../common/schemas.yaml#/components/schemas/AppMetaInfo'
                      - type: object
                        properties:
                          gitMaterials:
                            type: array
                            items:
                              $ref: '../common/schemas.yaml#/components/schemas/GitMaterialMeta'
                          templateConfig:
                            $ref: '../common/schemas.yaml#/components/schemas/TemplateConfig'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/ErrorResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Application Metadata

  /helm/meta/info/{appId}:
    get:
      summary: Get Helm Application Meta Info
      description: Retrieves application info for all types of Helm apps
      operationId: getHelmAppMetaInfo
      security:
        - bearerAuth: []
      parameters:
        - name: appId
          in: path
          description: Application ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Helm application basic info
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: Status code
                  status:
                    type: string
                    description: Status
                  result:
                    allOf:
                      - $ref: '../common/schemas.yaml#/components/schemas/AppMetaInfo'
                      - type: object
                        properties:
                          chartUsed:
                            $ref: '../common/schemas.yaml#/components/schemas/ChartUsed'
                          gitMaterials:
                            type: array
                            items:
                              $ref: '../common/schemas.yaml#/components/schemas/GitMaterialMeta'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/ErrorResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '../common/schemas.yaml#/components/schemas/ErrorResponse'
      tags:
        - Helm Application Metadata

tags:
  - name: Application Labels
    description: Operations related to application labels
  - name: Application Metadata
    description: Operations related to application metadata
  - name: Helm Application Metadata
    description: Operations related to Helm application metadata