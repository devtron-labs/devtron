openapi: "3.0.0"
info:
  version: 1.0.0
  title: Application Labels Management
  description: API for managing application labels and metadata
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: /orchestrator
    description: Devtron Orchestrator API Server

components:
  schemas:

    # Application Related Schemas
    AppLabel:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: Label key
        value:
          type: string
          description: Label value
        propagate:
          type: boolean
          description: Whether to propagate to kubernetes resources

    AppMetaInfo:
      type: object
      required:
        - appId
        - projectId
        - appName
        - projectName
        - createdOn
        - createdBy
      properties:
        appId:
          type: integer
          description: Application ID
        projectId:
          type: integer
          description: Team/project ID
        appName:
          type: string
          description: Application name
        projectName:
          type: string
          description: Team/project name
        description:
          type: string
          description: Application description
        labels:
          type: array
          items:
            $ref: '#/components/schemas/AppLabel'
        createdOn:
          type: string
          format: date-time
          description: Application creation date
        createdBy:
          type: string
          description: Application created by
        active:
          type: boolean
          description: Whether application is active
        note:
          $ref: '#/components/schemas/GenericNoteResponse'

    App:
      type: object
      required:
        - appName
      properties:
        id:
          type: integer
          format: int64
          description: Application ID
        appName:
          type: string
          description: Name of the application
        teamId:
          type: integer
          format: int64
          description: Team ID
        templateId:
          type: integer
          description: Reference app id, used for clone, set default value 0 for blank app
        labels:
          type: array
          description: Application labels (optional)
          items:
            $ref: '#/components/schemas/AppLabel'
        description:
          type: string
          description: Application description
        projectIds:
          type: array
          items:
            type: integer
            format: int64
          description: IDs of projects this application belongs to

    AppContainer:
      type: object
      required:
        - appId
        - appName
        - environments
      properties:
        appId:
          type: integer
          description: Application ID
        appName:
          type: string
          description: Application name
        environments:
          type: array
          items:
            $ref: '#/components/schemas/EnvContainer'

    EnvContainer:
      type: object
      required:
        - appId
        - appName
        - environmentId
        - environmentName
      properties:
        appId:
          type: integer
          description: Application ID
        appName:
          type: string
          description: Application name
        cdStageStatus:
          type: string
          description: CD stage status
        dataSource:
          type: string
          description: Data source
        ciArtifactId:
          type: integer
          description: CI artifact ID
        deleted:
          type: boolean
          description: Whether deleted
        environmentId:
          type: integer
          description: Environment ID
        environmentName:
          type: string
          description: Environment name
        status:
          type: string
          description: Status
        appStatus:
          type: string
          description: Application status for this environment
        postStageStatus:
          type: string
          description: Post stage status
        preStageStatus:
          type: string
          description: Pre stage status
        lastDeployedTime:
          type: string
          description: Last deployment time
        materialInfo:
          type: array
          items:
            type: object

    AppProjectUpdateRequest:
      type: object
      required:
        - appId
        - projectIds
      properties:
        appId:
          type: integer
          format: int64
          description: Application ID
        projectIds:
          type: array
          items:
            type: integer
            format: int64
          description: IDs of projects to associate with the application

    AppListingRequest:
      type: object
      properties:
        appNameSearch:
          type: string
          description: Application name search, wildcard match
        offset:
          type: integer
          description: Pagination offset
        size:
          type: integer
          description: Page size
        sortBy:
          type: string
          description: Sort by field
        sortOrder:
          type: string
          description: Sort order
        environments:
          type: array
          description: Environment IDs
          items:
            type: integer
        teams:
          type: array
          description: Team IDs (project IDs)
          items:
            type: integer
        labels:
          type: array
          description: Application labels
          items:
            type: string
        statuses:
          type: array
          description: Application statuses
          items:
            type: string

    DeploymentGroup:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          description: Deployment group ID
        ciPipelineId:
          type: integer
          description: CI pipeline ID
        environmentId:
          type: integer
          description: Environment ID
        appCount:
          type: integer
          description: Application count
        name:
          type: string
          description: Deployment group name
        noOfApps:
          type: string
          description: Number of applications

    # Common Utility Schemas
    GenericNoteResponse:
      type: object
      properties:
        id:
          type: integer
          description: Note ID
        description:
          type: string
          description: Note content/description
        createdOn:
          type: string
          format: date-time
          description: Creation timestamp
        createdBy:
          type: string
          description: Creator's email
        updatedOn:
          type: string
          format: date-time
          description: Last update timestamp
        updatedBy:
          type: string
          description: Last updater's email

    ListingRequest:
      type: object
      properties:
        searchKey:
          type: string
          nullable: true
        sortOrder:
          type: string
          enum: [ ASC, DESC ]
          nullable: true
        sortBy:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          minimum: 0
          nullable: true
        size:
          type: integer
          format: int32
          minimum: 1
          default: 20
          nullable: true
        showAll:
          type: boolean
          nullable: true
          readOnly: true

    # Git Material Schemas
    GitMaterial:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        id:
          type: integer
        gitProviderId:
          type: integer
        checkoutPath:
          type: string
        fetchSubmodules:
          type: boolean
        isUsedInCiConfig:
          type: boolean

    GitMaterialMeta:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of the git material
        redirectionUrl:
          type: string
          description: HTTPS URL for redirection
        originalUrl:
          type: string
          description: Original git URL

    # Template Schemas
    TemplateConfig:
      type: object
      properties:
        id:
          type: integer
          description: Template config ID
        identifier:
          type: string
          description: Template identifier
        name:
          type: string
          description: Template name

    # Chart Related Schemas
    ChartUsed:
      type: object
      properties:
        appStoreChartName:
          type: string
          description: Name of the chart from app store
        appStoreChartId:
          type: integer
          description: ID of the chart from app store
        appStoreAppName:
          type: string
          description: Name of the app in app store
        appStoreAppVersion:
          type: string
          description: Version of the app in app store
        chartAvatar:
          type: string
          description: Avatar/icon of the chart

    ChartInfo:
      type: object
      required:
        - installedAppId
        - environmentId
        - installedAppVersionId
        - appStoreApplicationVersionId
        - appStoreApplicationName
        - status
        - appName
        - environmentName
        - deployedAt
        - deployedBy
        - readme
        - deprecated
      properties:
        installedAppId:
          type: integer
          description: Installed chart ID
        environmentId:
          type: integer
          description: Environment ID
        installedAppVersionId:
          type: integer
          description: Installed chart version ID
        appStoreApplicationVersionId:
          type: integer
          description: App store application version ID
        appStoreApplicationName:
          type: string
          description: Chart name externally
        chartName:
          type: string
          description: Chart repo name
        icon:
          type: string
          description: Chart icon
        status:
          type: string
          description: Status of deployed chart
        appName:
          type: string
          description: Chart name as app name for devtron
        environmentName:
          type: string
          description: Environment name
        deployedAt:
          type: string
          description: Deployment time
        deployedBy:
          type: string
          description: User who deployed
        readme:
          type: string
          description: Chart readme
        deprecated:
          type: boolean
          description: Whether chart is deprecated

    # Bulk Operation Schemas
    NameIncludesExcludes:
      type: object
      properties:
        names:
          type: array
          items:
            type: string
          description: All strings of app names to be included/excluded

    BulkActionRequest:
      type: object
      properties:
        includes:
          $ref: '#/components/schemas/NameIncludesExcludes'
        excludes:
          $ref: '#/components/schemas/NameIncludesExcludes'
        envIds:
          type: array
          items:
            type: integer
          description: All Environment IDs for the bulk action
        appIds:
          type: array
          items:
            type: integer
          description: All Application IDs for the bulk action
        projectIds:
          type: array
          items:
            type: integer
          description: All Project IDs for the bulk action

    BulkActionResponse:
      type: object
      properties:
        message:
          type: array
          items:
            type: string
          description: Top-level messages in response of the bulk action
        failure:
          type: array
          items:
            $ref: '#/components/schemas/BulkActionFailureDetail'
          description: Details of all items on which the bulk action failed
        successful:
          type: array
          items:
            $ref: '#/components/schemas/BulkActionSuccessDetail'
          description: Details of all items on which the bulk action applied successfully

    BulkActionFailureDetail:
      type: object
      properties:
        appId:
          type: integer
        appName:
          type: string
        envId:
          type: integer
        message:
          type: string

    BulkActionSuccessDetail:
      type: object
      properties:
        appId:
          type: integer
        appName:
          type: string
        envId:
          type: integer
        message:
          type: string
    ClusterBean:
      type: object
      properties:
        id:
          type: integer
        cluster_name:
          type: string
        server_url:
          type: string
        prometheus_url:
          type: string
        active:
          type: boolean
        config:
          type: object
          properties:
            stage:
              type: string
            error:
              type: string
        k8sversion:
          type: string
        prometheusAuth:
          $ref: '#/components/schemas/PrometheusAuth'
        defaultClusterComponent:
          type: array
          items:
            $ref: '#/components/schemas/DefaultClusterComponent'
    EnvironmentBean:
      type: object
      properties:
        id:
          type: integer
        cluster_name:
          type: string
        cluster_id:
          type: integer
        environment_name:
          type: string
        active:
          type: boolean
        default:
          type: boolean
        prometheus_endpoint:
          $ref: '#/components/schemas/PrometheusAuth'
        namespace:
          type: string
        isClusterCdActive:
          type: boolean
    TeamRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        active:
          type: boolean
    GitRegistry:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
        userName:
          type: string
        password:
          type: string
        sshPrivateKey:
          type: string
        accessToken:
          type: string
        authMode:
          type: string
        active:
          type: boolean
        gitHostId:
          type: integer
    DockerArtifactStoreBean:
      type: object
      properties:
        id:
          type: integer
        pluginId:
          type: string
        registryUrl:
          type: string
        registryType:
          type: string
        awsAccessKeyId:
          type: string
        awsSecretAccessKey:
          type: string
        awsRegion:
          type: string
        username:
          type: string
        password:
          type: string
        isDefault:
          type: boolean
        active:
          type: boolean
        connection:
          type: string
        cert:
          type: string
    ChartRepoDto:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
        name:
          type: string
        accessToken:
          type: string
        sshKey:
          type: string
        userName:
          type: string
        password:
          type: string
        default:
          type: boolean
        active:
          type: boolean
        authMode:
          type: string
    UpdateMaterialDTO:
      type: object
      properties:
        appId:
          type: integer
        material:
          $ref: '#/components/schemas/GitMaterial'
    ChartGroupBean:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
        chartGroupEntries:
          type: array
          items:
            $ref: '#/components/schemas/ChartGroupEntryBean'
        installedChartData:
          type: array
          items:
            $ref: '#/components/schemas/InstalledChartData'
    ChartGroupEntryBean:
      type: object
      properties:
        id:
          type: integer
        appStoreValuesVersionId:
          type: integer
        appStoreApplicationVersionId:
          type: integer
        appStoreValuesVersionName:
          type: string
        appStoreValuesChartVersion:
          type: string
        referenceType:
          type: string
        chartMetaData:
          $ref: '#/components/schemas/ChartMetaData'
    ChartMetaData:
      type: object
      properties:
        appStoreId:
          type: integer
        environmentId:
          type: integer
        isChartRepoActive:
          type: boolean
        chartName:
          type: string
        chartRepoName:
          type: string
        icon:
          type: string
        environmentName:
          type: string
        appStoreApplicationVersion:
          type: string
    InstalledChartData:
      type: object
      properties:
        installationTime:
          type: string
          description: time type
        installedCharts:
          $ref: '#/components/schemas/InstalledChart'
    InstalledChart:
      type: string
      properties:
        installedAppId:
          type: integer
    ChannelDto:
      type: object
      properties:
        channel:
          type: string
          description: type of channel, i.e. slack or SES
    SlackConfigDto:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        teamId:
          type: integer
        webhookUrl:
          type: string
        configName:
          type: string
        description:
          type: string
    SESConfigDto:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        teamId:
          type: integer
        region:
          type: string
        accessKey:
          type: string
        secretKey:
          type: string
        fromEmail:
          type: string
        toEmail:
          type: string
        sessionToken:
          type: string
        configName:
          type: string
        description:
          type: string
        default:
          type: boolean
    PrometheusAuth:
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
        tlsClientCert:
          type: string
        tlsClientKey:
          type: string
    DefaultClusterComponent:
      type: object
      properties:
        name:
          type: string
        appId:
          type: integer
        installedAppId:
          type: integer
        envId:
          type: integer
        envname:
          type: string
        status:
          type: string



    ApiError:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 404
        message:
          type: string
          example: "Resource not found"
        details:
          type: array
          items:
            type: string
          example: [ "Resource not found in the system" ]


  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /app/labels/list:
    get:
      summary: List Application Labels
      description: |
        Retrieves a list of application labels. By default, returns all labels.
        Use the `showPropagatedOnly` parameter to filter for labels where propagate = true.

        **Required Token Permission:**
        - Must have **View** access to the applications in scope.
      operationId: getAppLabels
      security:
        - bearerAuth: []
      parameters:
        - name: showPropagatedOnly
          in: query
          description: |
            If true, only returns labels where propagate = true.
            If false or not provided, all labels are returned.
          required: false
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: Successfully retrieved labels list
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: HTTP status code
                    example: 200
                  status:
                    type: string
                    description: Response status message
                    example: OK
                  result:
                    type: array
                    description: Array of label objects
                    items:
                      allOf:
                        - type: object
                          properties:
                            appId:
                              type: integer
                              description: unique application id
                            appName:
                              type: string
                              description: The name of the application
                          required:
                            - appId
                            - appName
                        - $ref: '#/components/schemas/AppLabel'
              examples:
                all_labels:
                  summary: All labels response
                  description: Example response when showPropagatedOnly is false or not provided
                  value:
                    code: 200
                    status: OK
                    result:
                      - key: environment
                        value: production
                        propagate: true
                        appId: 1234
                        appName: web-service
                      - key: team
                        value: backend
                        propagate: false
                        appId: 1234
                        appName: web-service
                propagated_only:
                  summary: Propagated labels only
                  description: Example response when showPropagatedOnly is true
                  value:
                    code: 200
                    status: OK
                    result:
                      - key: environment
                        value: production
                        propagate: true
                        appId: 1234
                        appName: web-service
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Authentication required or token invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 401
                  status:
                    type: string
                    example: Unauthorized
                  message:
                    type: string
                    example: Authentication token is required
        '403':
          description: Insufficient permissions to access the resource
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 403
                  status:
                    type: string
                    example: Forbidden
                  message:
                    type: string
                    example: Token does not have View access to the applications in scope
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  status:
                    type: string
                    example: Internal Server Error
                  message:
                    type: string
                    example: An unexpected error occurred
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      tags:
        - Application Labels

  /app/meta/info/{appId}:
    get:
      summary: Get Application Meta Info
      description: Retrieves application basic info, projects and labels
      operationId: getAppMetaInfo
      security:
        - bearerAuth: []
      parameters:
        - name: appId
          in: path
          description: Application ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Application basic info, projects and labels
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: Status code
                  status:
                    type: string
                    description: Status
                  result:
                    allOf:
                      - $ref: '#/components/schemas/AppMetaInfo'
                      - type: object
                        properties:
                          gitMaterials:
                            type: array
                            items:
                              $ref: '#/components/schemas/GitMaterialMeta'
                          templateConfig:
                            $ref: '#/components/schemas/TemplateConfig'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      tags:
        - Application Metadata

  /helm/meta/info/{appId}:
    get:
      summary: Get Helm Application Meta Info
      description: Retrieves application info for all types of Helm apps
      operationId: getHelmAppMetaInfo
      security:
        - bearerAuth: []
      parameters:
        - name: appId
          in: path
          description: Application ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Helm application basic info
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: Status code
                  status:
                    type: string
                    description: Status
                  result:
                    allOf:
                      - $ref: '#/components/schemas/AppMetaInfo'
                      - type: object
                        properties:
                          chartUsed:
                            $ref: '#/components/schemas/ChartUsed'
                          gitMaterials:
                            type: array
                            items:
                              $ref: '#/components/schemas/GitMaterialMeta'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      tags:
        - Helm Application Metadata

tags:
  - name: Application Labels
    description: Operations related to application labels
  - name: Application Metadata
    description: Operations related to application metadata
  - name: Helm Application Metadata
    description: Operations related to Helm application metadata