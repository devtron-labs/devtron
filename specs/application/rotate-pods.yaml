openapi: 3.0.3
info:
  title: Devtron App Rotate Pods API
  description: API specification for rotating pods in Devtron applications
  version: 1.0.0
  contact:
    name: Devtron Labs
    url: https://devtron.ai
    email: support@devtron.ai

servers:
  - url: https://devtron-ent-2.devtron.info
    description: Devtron Enterprise Server

security:
  - bearerAuth: []

paths:
  /orchestrator/app/rotate-pods:
    post:
      tags:
        - App Management
      summary: Rotate Pods
      description: |
        Rotates (restarts) pods for a specific application in an environment.
        This operation triggers a rolling restart of the specified Kubernetes resources.
        
        **Use Cases:**
        - Restart pods to pick up new configuration changes
        - Force pod recreation for troubleshooting
        - Apply resource updates that require pod restart
        
        **Required Permissions:**
        - Application trigger permission
        - Environment trigger permission
      operationId: rotatePods
      requestBody:
        description: Pod rotation request containing application details and resources to rotate
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PodRotateRequest'
            examples:
              deployment_rotation:
                summary: Rotate deployment pods
                description: Example of rotating pods for a deployment
                value:
                  appId: 123
                  environmentId: 456
                  resources:
                    - name: "my-app-deployment"
                      namespace: "production"
                      groupVersionKind:
                        group: "apps"
                        version: "v1"
                        kind: "Deployment"
              statefulset_rotation:
                summary: Rotate StatefulSet pods
                description: Example of rotating pods for a StatefulSet
                value:
                  appId: 123
                  environmentId: 456
                  resources:
                    - name: "my-database"
                      namespace: "production"
                      groupVersionKind:
                        group: "apps"
                        version: "v1"
                        kind: "StatefulSet"
              multiple_resources:
                summary: Rotate multiple resources
                description: Example of rotating pods for multiple resources
                value:
                  appId: 123
                  environmentId: 456
                  resources:
                    - name: "frontend-deployment"
                      namespace: "production"
                      groupVersionKind:
                        group: "apps"
                        version: "v1"
                        kind: "Deployment"
                    - name: "backend-deployment"
                      namespace: "production"
                      groupVersionKind:
                        group: "apps"
                        version: "v1"
                        kind: "Deployment"
      responses:
        '200':
          description: Pod rotation completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RotatePodResponse'
              examples:
                successful_rotation:
                  summary: Successful rotation
                  description: All resources rotated successfully
                  value:
                    code: 200
                    status: "OK"
                    result:
                      responses:
                        - name: "my-app-deployment"
                          namespace: "production"
                          groupVersionKind:
                            group: "apps"
                            version: "v1"
                            kind: "Deployment"
                          errorResponse: ""
                      containsError: false
                partial_failure:
                  summary: Partial failure
                  description: Some resources failed to rotate
                  value:
                    code: 200
                    status: "OK"
                    result:
                      responses:
                        - name: "working-deployment"
                          namespace: "production"
                          groupVersionKind:
                            group: "apps"
                            version: "v1"
                            kind: "Deployment"
                          errorResponse: ""
                        - name: "failed-deployment"
                          namespace: "production"
                          groupVersionKind:
                            group: "apps"
                            version: "v1"
                            kind: "Deployment"
                          errorResponse: "deployment not found"
                      containsError: true
        '400':
          description: Bad request - Invalid input parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                validation_error:
                  summary: Validation error
                  description: Request validation failed
                  value:
                    code: 400
                    status: "Bad Request"
                    errors:
                      - code: "000"
                        internalMessage: "validation failed for field 'appId': required"
                        userMessage: "Application ID is required"
                missing_resources:
                  summary: Missing resources
                  description: No resources specified for rotation
                  value:
                    code: 400
                    status: "Bad Request"
                    errors:
                      - code: "000"
                        internalMessage: "validation failed for field 'resources': required"
                        userMessage: "At least one resource must be specified"
        '401':
          description: Unauthorized - Invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unauthorized:
                  summary: Unauthorized access
                  value:
                    code: 401
                    status: "Unauthorized"
                    errors:
                      - code: "000"
                        internalMessage: "invalid or missing authentication token"
                        userMessage: "Authentication required"
        '403':
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                insufficient_permissions:
                  summary: Insufficient permissions
                  description: User lacks required permissions
                  value:
                    code: 403
                    status: "Forbidden"
                    errors:
                      - code: "000"
                        internalMessage: "unauthorized user"
                        userMessage: "Insufficient permissions to rotate pods for this application"
        '404':
          description: Not found - Application or environment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                app_not_found:
                  summary: Application not found
                  value:
                    code: 404
                    status: "Not Found"
                    errors:
                      - code: "11006"
                        internalMessage: "resource not found"
                        userMessage: "Application not found"
                env_not_found:
                  summary: Environment not found
                  value:
                    code: 404
                    status: "Not Found"
                    errors:
                      - code: "11006"
                        internalMessage: "resource not found"
                        userMessage: "Environment not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: Internal server error
                  value:
                    code: 500
                    status: "Internal Server Error"
                    errors:
                      - code: "000"
                        internalMessage: "failed to rotate pods: cluster connection error"
                        userMessage: "Failed to rotate pods due to server error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication

  schemas:
    PodRotateRequest:
      type: object
      required:
        - appId
        - environmentId
        - resources
      properties:
        appId:
          type: integer
          description: Unique identifier of the application
          example: 123
          minimum: 1
        environmentId:
          type: integer
          description: Unique identifier of the environment
          example: 456
          minimum: 1
        resources:
          type: array
          description: List of Kubernetes resources to rotate
          minItems: 1
          items:
            $ref: '#/components/schemas/ResourceIdentifier'
      example:
        appId: 123
        environmentId: 456
        resources:
          - name: "my-app-deployment"
            namespace: "production"
            groupVersionKind:
              group: "apps"
              version: "v1"
              kind: "Deployment"

    ResourceIdentifier:
      type: object
      required:
        - name
        - namespace
        - groupVersionKind
      properties:
        name:
          type: string
          description: Name of the Kubernetes resource
          example: "my-app-deployment"
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
          maxLength: 253
        namespace:
          type: string
          description: Kubernetes namespace of the resource
          example: "production"
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
          maxLength: 63
        groupVersionKind:
          $ref: '#/components/schemas/GroupVersionKind'
      example:
        name: "my-app-deployment"
        namespace: "production"
        groupVersionKind:
          group: "apps"
          version: "v1"
          kind: "Deployment"

    GroupVersionKind:
      type: object
      required:
        - group
        - version
        - kind
      properties:
        group:
          type: string
          description: Kubernetes API group
          example: "apps"
        version:
          type: string
          description: Kubernetes API version
          example: "v1"
          pattern: '^v[0-9]+((alpha|beta)[0-9]+)?$'
        kind:
          type: string
          description: Kubernetes resource kind
          example: "Deployment"
          enum:
            - "Deployment"
            - "StatefulSet"
            - "DaemonSet"
            - "ReplicaSet"
            - "Job"
            - "CronJob"
      example:
        group: "apps"
        version: "v1"
        kind: "Deployment"

    RotatePodResponse:
      type: object
      properties:
        code:
          type: integer
          description: HTTP status code
          example: 200
        status:
          type: string
          description: Response status
          example: "OK"
        result:
          $ref: '#/components/schemas/RotatePodResult'
      example:
        code: 200
        status: "OK"
        result:
          responses:
            - name: "my-app-deployment"
              namespace: "production"
              groupVersionKind:
                group: "apps"
                version: "v1"
                kind: "Deployment"
              errorResponse: ""
          containsError: false

    RotatePodResult:
      type: object
      properties:
        responses:
          type: array
          description: List of rotation responses for each resource
          items:
            $ref: '#/components/schemas/RotatePodResourceResponse'
        containsError:
          type: boolean
          description: Indicates if any resource rotation failed
          example: false
      example:
        responses:
          - name: "my-app-deployment"
            namespace: "production"
            groupVersionKind:
              group: "apps"
              version: "v1"
              kind: "Deployment"
            errorResponse: ""
        containsError: false

    RotatePodResourceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ResourceIdentifier'
        - type: object
          properties:
            errorResponse:
              type: string
              description: Error message if rotation failed, empty if successful
              example: ""
      example:
        name: "my-app-deployment"
        namespace: "production"
        groupVersionKind:
          group: "apps"
          version: "v1"
          kind: "Deployment"
        errorResponse: ""

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          description: HTTP status code
          example: 400
        status:
          type: string
          description: Error status
          example: "Bad Request"
        errors:
          type: array
          description: List of error details
          items:
            $ref: '#/components/schemas/ErrorDetail'
      example:
        code: 400
        status: "Bad Request"
        errors:
          - code: "000"
            internalMessage: "validation failed"
            userMessage: "Invalid request parameters"

    ErrorDetail:
      type: object
      properties:
        code:
          type: string
          description: Error code
          example: "000"
        internalMessage:
          type: string
          description: Internal error message for debugging
          example: "validation failed for field 'appId': required"
        userMessage:
          type: string
          description: User-friendly error message
          example: "Application ID is required"
        userDetailMessage:
          type: string
          description: Detailed user message (optional)
          example: "Please provide a valid application ID"
      example:
        code: "000"
        internalMessage: "validation failed for field 'appId': required"
        userMessage: "Application ID is required"
