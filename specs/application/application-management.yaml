openapi: "3.0.3"
info:
  title: Devtron Application Management API
  description: API specifications for application hibernation, deployment status, and lifecycle management
  version: "1.0.0"
  contact:
    name: Devtron Support
    email: support@devtron.ai
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: /orchestrator
    description: Devtron Orchestrator API Server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
        status:
          type: string
        result:
          type: object

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
        status:
          type: string
        errors:
          type: array
          items:
            type: string

    HibernateRequest:
      type: object
      properties:
        appId:
          type: string
          example: "123"
        resources:
          type: array
          items:
            $ref: '#/components/schemas/HibernateTargetObject'

    HibernateTargetObject:
      type: object
      properties:
        group:
          type: string
          example: "apps"
        kind:
          type: string
          example: "Deployment"
        version:
          type: string
          example: "v1"
        name:
          type: string
          example: "my-app"
        namespace:
          type: string
          example: "default"

    HibernateStatus:
      type: object
      properties:
        success:
          type: boolean
          example: true
        errorMessage:
          type: string
          example: ""
        targetObject:
          $ref: '#/components/schemas/HibernateTargetObject'

    PipelineTriggerRequest:
      type: object
      properties:
        appId:
          type: integer
          example: 123
        environmentId:
          type: integer
          example: 456
        pipelineId:
          type: integer
          example: 789

tags:
  - name: Application Hibernation
    description: Application hibernation and unhibernation operations
  - name: Pipeline Management
    description: CD pipeline trigger and management operations
  - name: Deployment Status
    description: Deployment status and timeline operations

paths:
  /application/hibernate:
    post:
      tags:
        - Application Hibernation
      summary: Hibernate application
      description: Hibernates the specified application resources
      operationId: hibernateApplication
      parameters:
        - name: appType
          in: query
          required: true
          schema:
            type: string
            enum: ["argo", "helm", "flux"]
          example: "argo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HibernateRequest'
            example:
              appId: "123"
              resources:
                - group: "apps"
                  kind: "Deployment"
                  version: "v1"
                  name: "my-app"
                  namespace: "default"
      responses:
        '200':
          description: Application hibernated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/HibernateStatus'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /application/unhibernate:
    post:
      tags:
        - Application Hibernation
      summary: Unhibernate application
      description: Unhibernates the specified application resources
      operationId: unhibernateApplication
      parameters:
        - name: appType
          in: query
          required: true
          schema:
            type: string
            enum: ["argo", "helm", "flux"]
          example: "argo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HibernateRequest'
            example:
              appId: "123"
              resources:
                - group: "apps"
                  kind: "Deployment"
                  version: "v1"
                  name: "my-app"
                  namespace: "default"
      responses:
        '200':
          description: Application unhibernated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/HibernateStatus'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /app/cd-pipeline/trigger:
    post:
      tags:
        - Pipeline Management
      summary: Trigger CD pipeline
      description: Triggers a CD pipeline deployment for the specified application and environment
      operationId: triggerCdPipeline
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineTriggerRequest'
            example:
              appId: 123
              environmentId: 456
              pipelineId: 789
      responses:
        '200':
          description: CD pipeline triggered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /app/deployment-status/timeline/{appId}/{envId}:
    get:
      tags:
        - Deployment Status
      summary: Get deployment status timeline
      description: Retrieves the deployment status timeline for the specified application and environment
      operationId: getDeploymentStatusTimeline
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: integer
          example: 123
        - name: envId
          in: path
          required: true
          schema:
            type: integer
          example: 456
      responses:
        '200':
          description: Deployment status timeline retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Application or environment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /app/deployment-status/manual-sync/{appId}/{envId}:
    get:
      tags:
        - Deployment Status
      summary: Manual sync deployment status
      description: Manually synchronizes the deployment status for the specified application and environment
      operationId: manualSyncDeploymentStatus
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: integer
          example: 123
        - name: envId
          in: path
          required: true
          schema:
            type: integer
          example: 456
      responses:
        '200':
          description: Manual sync completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Application or environment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
