openapi: 3.0.3
info:
  version: 1.0.0
  title: Devtron Orchestrator Application Management API
  description: |
    Comprehensive API specifications for Devtron orchestrator application management endpoints.
    This includes CRUD operations for applications, deployment management, and application lifecycle operations.
  termsOfService: https://devtron.ai/terms/
  contact:
    name: Devtron Support
    email: support@devtron.ai
    url: https://devtron.ai/support
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: /orchestrator
    description: Devtron Orchestrator API Server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication

  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          description: HTTP status code
        status:
          type: string
          description: Status message
        result:
          type: object
          description: Response result data

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          description: Error code
        status:
          type: string
          description: Error status
        errors:
          type: array
          items:
            type: string
          description: List of error messages

    Application:
      type: object
      required:
        - appName
        - teamId
      properties:
        id:
          type: integer
          format: int64
          description: Application ID
        appName:
          type: string
          description: Name of the application
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
          minLength: 1
          maxLength: 63
        teamId:
          type: integer
          format: int64
          description: Team ID
        description:
          type: string
          description: Application description
        labels:
          type: array
          items:
            $ref: '#/components/schemas/AppLabel'
          description: Application labels
        projectIds:
          type: array
          items:
            type: integer
            format: int64
          description: IDs of projects this application belongs to
        active:
          type: boolean
          description: Whether the application is active
        createdOn:
          type: string
          format: date-time
          description: Application creation timestamp
        createdBy:
          type: integer
          description: ID of user who created the application

    AppLabel:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: Label key
        value:
          type: string
          description: Label value
        propagate:
          type: boolean
          description: Whether to propagate to kubernetes resources

    CreateApplicationRequest:
      type: object
      required:
        - appName
        - teamId
      properties:
        appName:
          type: string
          description: Name of the application
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
          minLength: 1
          maxLength: 63
        teamId:
          type: integer
          format: int64
          description: Team ID
        description:
          type: string
          description: Application description
        labels:
          type: array
          items:
            $ref: '#/components/schemas/AppLabel'
          description: Application labels
        projectIds:
          type: array
          items:
            type: integer
            format: int64
          description: IDs of projects this application belongs to

    UpdateApplicationRequest:
      type: object
      required:
        - id
        - appName
        - teamId
      properties:
        id:
          type: integer
          format: int64
          description: Application ID
        appName:
          type: string
          description: Name of the application
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
          minLength: 1
          maxLength: 63
        teamId:
          type: integer
          format: int64
          description: Team ID
        description:
          type: string
          description: Application description
        labels:
          type: array
          items:
            $ref: '#/components/schemas/AppLabel'
          description: Application labels
        projectIds:
          type: array
          items:
            type: integer
            format: int64
          description: IDs of projects this application belongs to

    ApplicationListRequest:
      type: object
      properties:
        teamIds:
          type: array
          items:
            type: integer
            format: int64
          description: Filter by team IDs
        environmentIds:
          type: array
          items:
            type: integer
            format: int64
          description: Filter by environment IDs
        statuses:
          type: array
          items:
            type: string
            enum: [Healthy, Degraded, Failed, Progressing, Unknown]
          description: Filter by application statuses
        appNameSearch:
          type: string
          description: Search term for application name
        offset:
          type: integer
          minimum: 0
          description: Pagination offset
        size:
          type: integer
          minimum: 1
          maximum: 100
          description: Page size
        projectIds:
          type: array
          items:
            type: integer
            format: int64
          description: Filter by project IDs
        sortBy:
          type: string
          enum: [appName, lastDeployed, status]
          description: Sort field
        sortOrder:
          type: string
          enum: [ASC, DESC]
          description: Sort order

    ApplicationListResponse:
      type: object
      properties:
        code:
          type: integer
          description: HTTP status code
        status:
          type: string
          description: Status message
        result:
          type: object
          properties:
            appCount:
              type: integer
              description: Total number of applications matching the filters
            appContainers:
              type: array
              items:
                $ref: '#/components/schemas/ApplicationContainer'
              description: List of applications

    ApplicationContainer:
      type: object
      properties:
        appId:
          type: integer
          format: int64
          description: Application ID
        appName:
          type: string
          description: Application name
        teamId:
          type: integer
          format: int64
          description: Team ID
        teamName:
          type: string
          description: Team name
        environments:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationEnvironment'
          description: Environments where the application is deployed
        lastDeployed:
          type: string
          format: date-time
          description: Last deployment timestamp
        status:
          type: string
          enum: [Healthy, Degraded, Failed, Progressing, Unknown]
          description: Overall application status

    ApplicationEnvironment:
      type: object
      properties:
        environmentId:
          type: integer
          format: int64
          description: Environment ID
        environmentName:
          type: string
          description: Environment name
        status:
          type: string
          enum: [Healthy, Degraded, Failed, Progressing, Unknown]
          description: Application status in this environment
        lastDeployed:
          type: string
          format: date-time
          description: Last deployment timestamp in this environment
        deploymentAppType:
          type: string
          enum: [helm, argo_cd]
          description: Deployment application type

tags:
  - name: Application Management
    description: Operations for managing applications in Devtron orchestrator

paths:
  /app:
    post:
      tags:
        - Application Management
      summary: Create new application
      description: Creates a new application in the Devtron orchestrator
      operationId: createApplication
      requestBody:
        description: Application creation request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
      responses:
        '200':
          description: Application created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/Application'
        '400':
          description: Invalid request format or validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Application with the same name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []

  /app/list:
    post:
      tags:
        - Application Management
      summary: List applications
      description: |
        Retrieves a paginated list of applications based on the provided filters.
        Supports filtering by teams, environments, statuses, and search terms.
      operationId: listApplications
      requestBody:
        description: Application listing filters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationListRequest'
      responses:
        '200':
          description: List of applications retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []

  /app/edit:
    post:
      tags:
        - Application Management
      summary: Update application
      description: Updates an existing application's configuration including projects and labels
      operationId: updateApplication
      requestBody:
        description: Application update request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationRequest'
      responses:
        '200':
          description: Application updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/Application'
        '400':
          description: Invalid request format or validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []

  /app/{appId}:
    get:
      tags:
        - Application Management
      summary: Get application details
      description: Retrieves detailed information about a specific application
      operationId: getApplication
      parameters:
        - name: appId
          in: path
          description: ID of the application to retrieve
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Application details retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/Application'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []

    delete:
      tags:
        - Application Management
      summary: Delete application
      description: Deletes an application and all its associated resources
      operationId: deleteApplication
      parameters:
        - name: appId
          in: path
          description: ID of the application to delete
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: cascade
          in: query
          description: Whether to cascade delete all associated resources
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Application deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Application cannot be deleted due to existing dependencies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - bearerAuth: []
