openapi: "3.0.3"
info:
  title: Devtron Pod and Resource Management API
  description: API specifications for pod logs, resource rotation, and Kubernetes resource management
  version: "1.0.0"
  contact:
    name: Devtron Support
    email: support@devtron.ai
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: /orchestrator
    description: Devtron Orchestrator API Server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
        status:
          type: string
        result:
          type: object

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
        status:
          type: string
        errors:
          type: array
          items:
            type: string

    PodRotateRequest:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ResourceIdentifier'

    ResourceIdentifier:
      type: object
      properties:
        Group:
          type: string
          example: ""
        Version:
          type: string
          example: "v1"
        Kind:
          type: string
          example: "Pod"
        Name:
          type: string
          example: "my-pod"
        Namespace:
          type: string
          example: "default"

    ResourceRotateRequest:
      type: object
      properties:
        resourceId:
          type: string
          example: "res-123"

tags:
  - name: Pod Logs
    description: Pod log retrieval operations
  - name: Resource Management
    description: Kubernetes resource management operations
  - name: Pod Rotation
    description: Pod rotation and restart operations

paths:
  /k8s/pods/logs/{podName}:
    get:
      tags:
        - Pod Logs
      summary: Get pod logs
      description: Retrieves logs from the specified pod and container
      operationId: getPodLogs
      parameters:
        - name: podName
          in: path
          required: true
          schema:
            type: string
          example: "my-app-pod-123"
        - name: containerName
          in: query
          required: true
          schema:
            type: string
          example: "main-container"
        - name: follow
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: Pod logs retrieved successfully
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Pod not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /k8s/pods/logs/download/{podName}:
    get:
      tags:
        - Pod Logs
      summary: Download pod logs
      description: Downloads logs from the specified pod and container as a file
      operationId: downloadPodLogs
      parameters:
        - name: podName
          in: path
          required: true
          schema:
            type: string
          example: "my-app-pod-123"
        - name: containerName
          in: query
          required: true
          schema:
            type: string
          example: "main-container"
      responses:
        '200':
          description: Pod logs file download
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Pod not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /k8s/resource/rotate:
    post:
      tags:
        - Resource Management
      summary: Rotate Kubernetes resource
      description: Rotates the specified Kubernetes resource
      operationId: rotateKubernetesResource
      parameters:
        - name: appId
          in: query
          required: true
          schema:
            type: integer
          example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceRotateRequest'
            example:
              resourceId: "res-123"
      responses:
        '200':
          description: Resource rotated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /app/rotate-pods:
    post:
      tags:
        - Pod Rotation
      summary: Rotate pods
      description: Rotates the specified pods using resource identifiers
      operationId: rotatePods
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PodRotateRequest'
            example:
              resources:
                - Group: ""
                  Version: "v1"
                  Kind: "Pod"
                  Name: "my-pod"
                  Namespace: "default"
      responses:
        '200':
          description: Pods rotated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /cluster/list:
    get:
      tags:
        - Resource Management
      summary: Get cluster list
      description: Retrieves a list of all available clusters
      operationId: getClusterList
      responses:
        '200':
          description: List of clusters retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /cluster/namespaces:
    get:
      tags:
        - Resource Management
      summary: Get all cluster namespaces
      description: Retrieves namespaces from all clusters
      operationId: getAllClusterNamespaces
      responses:
        '200':
          description: All cluster namespaces retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
