openapi: "3.0.0"
info:
  version: 1.0.0
  title: Deployment Pipeline Management
  description: Devtron API for deployment pipeline management
  termsOfService: https://devtron.ai/terms/
  contact:
    name: Devtron Labs
    email: support@devtron.ai
    url: https://devtron.ai
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080
paths:
  /orchestrator/deployment/pipeline/configure:
    post:
      description: Configure deployment pipeline for an application
      requestBody:
        description: Pipeline configuration details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineConfig'
      responses:
        '200':
          description: Pipeline configured successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineConfigResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orchestrator/app/cd-pipeline/trigger:
    post:
      description: Trigger a CD pipeline deployment with configuration override
      requestBody:
        description: CD pipeline trigger details with deployment configuration
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdPipelineTrigger'
            examples:
              manual_trigger:
                summary: Manual deployment trigger
                value:
                  pipelineId: 789
                  artifactId: 98765
                  triggeredBy: 123
                  deploymentType: "HELM"
                  deploymentStrategy: "ROLLING"
                  configOverrides:
                    replicas: 3
                    environment: "production"
                  runtimeParameters:
                    CPU_LIMIT: "500m"
                    MEMORY_LIMIT: "512Mi"
      responses:
        '200':
          description: CD pipeline triggered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdPipelineTriggerResponse'
              examples:
                successful_trigger:
                  summary: Successful trigger
                  value:
                    code: 200
                    status: "OK"
                    result:
                      workflowId: 12345
                      workflowRunnerId: 67890
                      pipelineId: 789
                      status: "Starting"
                      message: "CD pipeline triggered successfully"
        '400':
          description: Bad Request - Invalid trigger parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_pipeline:
                  summary: Invalid pipeline ID
                  value:
                    code: 400
                    status: "Bad Request"
                    errors:
                      - code: "000"
                        internalMessage: "invalid pipelineId: pipeline not found"
                        userMessage: "The specified pipeline does not exist"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                insufficient_permissions:
                  summary: Insufficient permissions
                  value:
                    code: 403
                    status: "Forbidden"
                    errors:
                      - code: "000"
                        internalMessage: "unauthorized user"
                        userMessage: "Insufficient permissions to trigger this pipeline"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orchestrator/deployment/pipeline/rollback:
    post:
      description: Rollback a deployment pipeline
      requestBody:
        description: Pipeline rollback details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineRollback'
      responses:
        '200':
          description: Pipeline rollback initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRollbackResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orchestrator/app/update-release-status:
    post:
      description: Update release status for a deployment
      requestBody:
        description: Release status update details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseStatusUpdate'
            examples:
              success_update:
                summary: Mark release as successful
                value:
                  workflowRunnerId: 67890
                  status: "SUCCESS"
                  message: "Deployment completed successfully"
                  updatedBy: 123
      responses:
        '200':
          description: Release status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseStatusResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orchestrator/app/stop-start-app:
    post:
      description: Start or stop application pods
      requestBody:
        description: Application start/stop request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppStartStopRequest'
            examples:
              stop_app:
                summary: Stop application
                value:
                  appId: 123
                  environmentId: 456
                  action: "STOP"
                  requestedBy: 789
              start_app:
                summary: Start application
                value:
                  appId: 123
                  environmentId: 456
                  action: "START"
                  requestedBy: 789
      responses:
        '200':
          description: Application start/stop operation initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppStartStopResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    PipelineConfig:
      type: object
      required:
        - appId
        - envId
      properties:
        appId:
          type: integer
          description: Application ID
        envId:
          type: integer
          description: Environment ID
        pipelineName:
          type: string
          description: Name of the pipeline
        triggerType:
          type: string
          enum: [AUTOMATIC, MANUAL]
          description: Type of pipeline trigger
        deploymentType:
          type: string
          enum: [HELM, ARGOCD]
          description: Type of deployment
        deploymentStrategy:
          type: string
          enum: [ROLLING, BLUE_GREEN, RECREATE]
          description: Deployment strategy
        preDeploymentScript:
          type: string
          description: Pre-deployment script
        postDeploymentScript:
          type: string
          description: Post-deployment script

    PipelineConfigResponse:
      type: object
      properties:
        code:
          type: integer
          description: Status code
        status:
          type: string
          description: Status message
        result:
          type: object
          properties:
            pipelineId:
              type: integer
              description: ID of the created pipeline
            pipelineName:
              type: string
              description: Name of the pipeline

    CdPipelineTrigger:
      type: object
      required:
        - pipelineId
        - artifactId
        - triggeredBy
      properties:
        pipelineId:
          type: integer
          description: CD Pipeline ID
          minimum: 1
          example: 789
        artifactId:
          type: integer
          description: Artifact ID to deploy
          minimum: 1
          example: 98765
        triggeredBy:
          type: integer
          description: User ID who triggered the pipeline
          minimum: 1
          example: 123
        deploymentType:
          type: string
          description: Type of deployment
          enum: ["HELM", "ARGOCD", "MANIFEST"]
          example: "HELM"
        deploymentStrategy:
          type: string
          description: Deployment strategy
          enum: ["ROLLING", "BLUE_GREEN", "RECREATE", "CANARY"]
          example: "ROLLING"
        configOverrides:
          type: object
          description: Configuration overrides for this deployment
          additionalProperties:
            oneOf:
              - type: string
              - type: number
              - type: boolean
          example:
            replicas: 3
            environment: "production"
            enableMetrics: true
        runtimeParameters:
          type: object
          description: Runtime parameters for deployment
          additionalProperties:
            type: string
          example:
            CPU_LIMIT: "500m"
            MEMORY_LIMIT: "512Mi"
            LOG_LEVEL: "INFO"
        preDeploymentScript:
          type: string
          description: Pre-deployment script to execute
          example: "#!/bin/bash\necho 'Running pre-deployment checks...'"
        postDeploymentScript:
          type: string
          description: Post-deployment script to execute
          example: "#!/bin/bash\necho 'Running post-deployment validation...'"

    CdPipelineTriggerResponse:
      type: object
      properties:
        code:
          type: integer
          description: HTTP status code
          example: 200
        status:
          type: string
          description: Response status
          example: "OK"
        result:
          type: object
          properties:
            workflowId:
              type: integer
              description: Workflow ID
              example: 12345
            workflowRunnerId:
              type: integer
              description: Workflow Runner ID
              example: 67890
            pipelineId:
              type: integer
              description: Pipeline ID
              example: 789
            status:
              type: string
              description: Initial workflow status
              enum: ["Starting", "Queued", "Failed"]
              example: "Starting"
            message:
              type: string
              description: Status message
              example: "CD pipeline triggered successfully"

    ReleaseStatusUpdate:
      type: object
      required:
        - workflowRunnerId
        - status
        - updatedBy
      properties:
        workflowRunnerId:
          type: integer
          description: Workflow Runner ID
          minimum: 1
          example: 67890
        status:
          type: string
          description: Release status
          enum: ["SUCCESS", "FAILED", "CANCELLED", "TIMEOUT"]
          example: "SUCCESS"
        message:
          type: string
          description: Status message or failure reason
          example: "Deployment completed successfully"
        updatedBy:
          type: integer
          description: User ID who updated the status
          minimum: 1
          example: 123

    ReleaseStatusResponse:
      type: object
      properties:
        code:
          type: integer
          description: HTTP status code
          example: 200
        status:
          type: string
          description: Response status
          example: "OK"
        result:
          type: object
          properties:
            workflowRunnerId:
              type: integer
              description: Workflow Runner ID
              example: 67890
            status:
              type: string
              description: Updated release status
              example: "SUCCESS"
            updatedAt:
              type: string
              format: date-time
              description: Timestamp when status was updated
              example: "2024-01-15T10:35:00Z"

    AppStartStopRequest:
      type: object
      required:
        - appId
        - environmentId
        - action
        - requestedBy
      properties:
        appId:
          type: integer
          description: Application ID
          minimum: 1
          example: 123
        environmentId:
          type: integer
          description: Environment ID
          minimum: 1
          example: 456
        action:
          type: string
          description: Action to perform
          enum: ["START", "STOP"]
          example: "STOP"
        requestedBy:
          type: integer
          description: User ID who requested the action
          minimum: 1
          example: 789

    AppStartStopResponse:
      type: object
      properties:
        code:
          type: integer
          description: HTTP status code
          example: 200
        status:
          type: string
          description: Response status
          example: "OK"
        result:
          type: object
          properties:
            appId:
              type: integer
              description: Application ID
              example: 123
            environmentId:
              type: integer
              description: Environment ID
              example: 456
            action:
              type: string
              description: Action performed
              example: "STOP"
            status:
              type: string
              description: Operation status
              enum: ["INITIATED", "IN_PROGRESS", "COMPLETED", "FAILED"]
              example: "INITIATED"
            message:
              type: string
              description: Operation message
              example: "Application stop operation initiated successfully"

    PipelineRollback:
      type: object
      required:
        - pipelineId
        - version
      properties:
        pipelineId:
          type: integer
          description: Pipeline ID
        version:
          type: string
          description: Version to rollback to
        triggeredBy:
          type: integer
          description: User ID who triggered the rollback

    PipelineRollbackResponse:
      type: object
      properties:
        code:
          type: integer
          description: Status code
        status:
          type: string
          description: Status message
        result:
          type: object
          properties:
            pipelineId:
              type: integer
              description: Pipeline ID
            workflowId:
              type: integer
              description: Workflow ID

    PipelineHistory:
      type: object
      properties:
        code:
          type: integer
          description: Status code
        status:
          type: string
          description: Status message
        result:
          type: array
          items:
            type: object
            properties:
              pipelineId:
                type: integer
                description: Pipeline ID
              workflowId:
                type: integer
                description: Workflow ID
              status:
                type: string
                description: Pipeline status
              startedOn:
                type: string
                format: date-time
                description: Start time
              finishedOn:
                type: string
                format: date-time
                description: End time
              triggeredBy:
                type: string
                description: User who triggered the pipeline
              artifactId:
                type: integer
                description: Artifact ID
              version:
                type: string
                description: Deployed version

    ErrorResponse:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message 