openapi: "3.0.0"
info:
  version: 1.0.0
  title: Cluster Access Policy Management
  description: API for managing cluster access policies and roles

paths:
  /orchestrator/cluster/access:
    post:
      summary: Create a new cluster access policy
      operationId: CreateClusterAccessPolicy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterAccessPolicy'
      responses:
        '200':
          description: Successfully created cluster access policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAccessPolicy'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update an existing cluster access policy
      operationId: UpdateClusterAccessPolicy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterAccessPolicy'
      responses:
        '200':
          description: Successfully updated cluster access policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAccessPolicy'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/cluster/access/{id}:
    get:
      summary: Get a cluster access policy by ID
      operationId: GetClusterAccessPolicy
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved cluster access policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAccessPolicy'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Cluster access policy not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete a cluster access policy
      operationId: DeleteClusterAccessPolicy
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted cluster access policy
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Cluster access policy not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orchestrator/cluster/access/list:
    get:
      summary: List all cluster access policies
      operationId: ListClusterAccessPolicies
      parameters:
        - name: clusterId
          in: query
          required: false
          schema:
            type: integer
        - name: namespace
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved cluster access policies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClusterAccessPolicy'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden, user is not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    ClusterAccessPolicy:
      type: object
      required:
        - cluster
        - action
      properties:
        id:
          type: integer
          description: Unique identifier for the policy
        cluster:
          type: string
          description: Name of the cluster
        namespace:
          type: string
          description: Namespace name. For multiple namespaces, use comma-separated values. Empty string for all namespaces.
        group:
          type: string
          description: Group name. For multiple groups, use comma-separated values. Empty string for all groups.
        kind:
          type: string
          description: Resource kind. For multiple kinds, use comma-separated values. Empty string for all kinds.
        resource:
          type: string
          description: Resource name. For multiple resources, use comma-separated values. Empty string for all resources.
        action:
          type: string
          description: Type of access role
          enum: ["view", "edit", "admin"]
        userId:
          type: integer
          description: ID of the user who created/updated the policy
        createdOn:
          type: string
          format: date-time
          description: Timestamp when the policy was created
        updatedOn:
          type: string
          format: date-time
          description: Timestamp when the policy was last updated

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message