openapi: "3.0.0"
info:
  version: 1.0.0
  title: Delete Option support for various components
  description: API for deleting various components in Devtron including clusters, environments, teams, and other resources
  termsOfService: https://devtron.ai/terms/
  contact:
    name: Devtron Support
    email: support@devtron.ai
    url: https://devtron.ai/support
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: /orchestrator
    description: Devtron Orchestrator API Server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication
  schemas:
    # Common Response Schemas
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          description: HTTP status code
          example: 200
        status:
          type: string
          description: HTTP status message
          example: OK
        result:
          type: object
          description: Response result data

    ErrorResponse:
      type: object
      required:
        - code
        - status
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        status:
          type: string
          description: Error message
        result:
          type: object
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error internal code
        message:
          type: string
          description: Error message
        internalMessage:
          type: string
          description: Error internal message
        userMessage:
          type: string
          description: Error user message

    # Application Related Schemas
    AppLabel:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: Label key
        value:
          type: string
          description: Label value
        propagate:
          type: boolean
          description: Whether to propagate to kubernetes resources

    AppMetaInfo:
      type: object
      required:
        - appId
        - projectId
        - appName
        - projectName
        - createdOn
        - createdBy
      properties:
        appId:
          type: integer
          description: Application ID
        projectId:
          type: integer
          description: Team/project ID
        appName:
          type: string
          description: Application name
        projectName:
          type: string
          description: Team/project name
        description:
          type: string
          description: Application description
        labels:
          type: array
          items:
            $ref: '#/components/schemas/AppLabel'
        createdOn:
          type: string
          format: date-time
          description: Application creation date
        createdBy:
          type: string
          description: Application created by
        active:
          type: boolean
          description: Whether application is active
        note:
          $ref: '#/components/schemas/GenericNoteResponse'

    App:
      type: object
      required:
        - appName
      properties:
        id:
          type: integer
          format: int64
          description: Application ID
        appName:
          type: string
          description: Name of the application
        teamId:
          type: integer
          format: int64
          description: Team ID
        templateId:
          type: integer
          description: Reference app id, used for clone, set default value 0 for blank app
        labels:
          type: array
          description: Application labels (optional)
          items:
            $ref: '#/components/schemas/AppLabel'
        description:
          type: string
          description: Application description
        projectIds:
          type: array
          items:
            type: integer
            format: int64
          description: IDs of projects this application belongs to

    AppContainer:
      type: object
      required:
        - appId
        - appName
        - environments
      properties:
        appId:
          type: integer
          description: Application ID
        appName:
          type: string
          description: Application name
        environments:
          type: array
          items:
            $ref: '#/components/schemas/EnvContainer'

    EnvContainer:
      type: object
      required:
        - appId
        - appName
        - environmentId
        - environmentName
      properties:
        appId:
          type: integer
          description: Application ID
        appName:
          type: string
          description: Application name
        cdStageStatus:
          type: string
          description: CD stage status
        dataSource:
          type: string
          description: Data source
        ciArtifactId:
          type: integer
          description: CI artifact ID
        deleted:
          type: boolean
          description: Whether deleted
        environmentId:
          type: integer
          description: Environment ID
        environmentName:
          type: string
          description: Environment name
        status:
          type: string
          description: Status
        appStatus:
          type: string
          description: Application status for this environment
        postStageStatus:
          type: string
          description: Post stage status
        preStageStatus:
          type: string
          description: Pre stage status
        lastDeployedTime:
          type: string
          description: Last deployment time
        materialInfo:
          type: array
          items:
            type: object

    AppProjectUpdateRequest:
      type: object
      required:
        - appId
        - projectIds
      properties:
        appId:
          type: integer
          format: int64
          description: Application ID
        projectIds:
          type: array
          items:
            type: integer
            format: int64
          description: IDs of projects to associate with the application

    AppListingRequest:
      type: object
      properties:
        appNameSearch:
          type: string
          description: Application name search, wildcard match
        offset:
          type: integer
          description: Pagination offset
        size:
          type: integer
          description: Page size
        sortBy:
          type: string
          description: Sort by field
        sortOrder:
          type: string
          description: Sort order
        environments:
          type: array
          description: Environment IDs
          items:
            type: integer
        teams:
          type: array
          description: Team IDs (project IDs)
          items:
            type: integer
        labels:
          type: array
          description: Application labels
          items:
            type: string
        statuses:
          type: array
          description: Application statuses
          items:
            type: string

    DeploymentGroup:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          description: Deployment group ID
        ciPipelineId:
          type: integer
          description: CI pipeline ID
        environmentId:
          type: integer
          description: Environment ID
        appCount:
          type: integer
          description: Application count
        name:
          type: string
          description: Deployment group name
        noOfApps:
          type: string
          description: Number of applications

    # Common Utility Schemas
    GenericNoteResponse:
      type: object
      properties:
        id:
          type: integer
          description: Note ID
        description:
          type: string
          description: Note content/description
        createdOn:
          type: string
          format: date-time
          description: Creation timestamp
        createdBy:
          type: string
          description: Creator's email
        updatedOn:
          type: string
          format: date-time
          description: Last update timestamp
        updatedBy:
          type: string
          description: Last updater's email

    ListingRequest:
      type: object
      properties:
        searchKey:
          type: string
          nullable: true
        sortOrder:
          type: string
          enum: [ ASC, DESC ]
          nullable: true
        sortBy:
          type: string
          nullable: true
        offset:
          type: integer
          format: int32
          minimum: 0
          nullable: true
        size:
          type: integer
          format: int32
          minimum: 1
          default: 20
          nullable: true
        showAll:
          type: boolean
          nullable: true
          readOnly: true

    # Git Material Schemas
    GitMaterial:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        id:
          type: integer
        gitProviderId:
          type: integer
        checkoutPath:
          type: string
        fetchSubmodules:
          type: boolean
        isUsedInCiConfig:
          type: boolean

    GitMaterialMeta:
      type: object
      properties:
        displayName:
          type: string
          description: Display name of the git material
        redirectionUrl:
          type: string
          description: HTTPS URL for redirection
        originalUrl:
          type: string
          description: Original git URL

    # Template Schemas
    TemplateConfig:
      type: object
      properties:
        id:
          type: integer
          description: Template config ID
        identifier:
          type: string
          description: Template identifier
        name:
          type: string
          description: Template name

    # Chart Related Schemas
    ChartUsed:
      type: object
      properties:
        appStoreChartName:
          type: string
          description: Name of the chart from app store
        appStoreChartId:
          type: integer
          description: ID of the chart from app store
        appStoreAppName:
          type: string
          description: Name of the app in app store
        appStoreAppVersion:
          type: string
          description: Version of the app in app store
        chartAvatar:
          type: string
          description: Avatar/icon of the chart

    ChartInfo:
      type: object
      required:
        - installedAppId
        - environmentId
        - installedAppVersionId
        - appStoreApplicationVersionId
        - appStoreApplicationName
        - status
        - appName
        - environmentName
        - deployedAt
        - deployedBy
        - readme
        - deprecated
      properties:
        installedAppId:
          type: integer
          description: Installed chart ID
        environmentId:
          type: integer
          description: Environment ID
        installedAppVersionId:
          type: integer
          description: Installed chart version ID
        appStoreApplicationVersionId:
          type: integer
          description: App store application version ID
        appStoreApplicationName:
          type: string
          description: Chart name externally
        chartName:
          type: string
          description: Chart repo name
        icon:
          type: string
          description: Chart icon
        status:
          type: string
          description: Status of deployed chart
        appName:
          type: string
          description: Chart name as app name for devtron
        environmentName:
          type: string
          description: Environment name
        deployedAt:
          type: string
          description: Deployment time
        deployedBy:
          type: string
          description: User who deployed
        readme:
          type: string
          description: Chart readme
        deprecated:
          type: boolean
          description: Whether chart is deprecated

    # Bulk Operation Schemas
    NameIncludesExcludes:
      type: object
      properties:
        names:
          type: array
          items:
            type: string
          description: All strings of app names to be included/excluded

    BulkActionRequest:
      type: object
      properties:
        includes:
          $ref: '#/components/schemas/NameIncludesExcludes'
        excludes:
          $ref: '#/components/schemas/NameIncludesExcludes'
        envIds:
          type: array
          items:
            type: integer
          description: All Environment IDs for the bulk action
        appIds:
          type: array
          items:
            type: integer
          description: All Application IDs for the bulk action
        projectIds:
          type: array
          items:
            type: integer
          description: All Project IDs for the bulk action

    BulkActionResponse:
      type: object
      properties:
        message:
          type: array
          items:
            type: string
          description: Top-level messages in response of the bulk action
        failure:
          type: array
          items:
            $ref: '#/components/schemas/BulkActionFailureDetail'
          description: Details of all items on which the bulk action failed
        successful:
          type: array
          items:
            $ref: '#/components/schemas/BulkActionSuccessDetail'
          description: Details of all items on which the bulk action applied successfully

    BulkActionFailureDetail:
      type: object
      properties:
        appId:
          type: integer
        appName:
          type: string
        envId:
          type: integer
        message:
          type: string

    BulkActionSuccessDetail:
      type: object
      properties:
        appId:
          type: integer
        appName:
          type: string
        envId:
          type: integer
        message:
          type: string
    ClusterBean:
          type: object
          properties:
            id:
              type: integer
            cluster_name:
              type: string
            server_url:
              type: string
            prometheus_url:
              type: string
            active:
              type: boolean
            config:
              type: object
              properties:
                stage:
                  type: string
                error:
                  type: string
            k8sversion:
              type: string
            prometheusAuth:
              $ref: '#/components/schemas/PrometheusAuth'
            defaultClusterComponent:
              type: array
              items:
                $ref: '#/components/schemas/DefaultClusterComponent'
    EnvironmentBean:
      type: object
      properties:
        id:
          type: integer
        cluster_name:
          type: string
        cluster_id:
          type: integer
        environment_name:
          type: string
        active:
          type: boolean
        default:
          type: boolean
        prometheus_endpoint:
          $ref: '#/components/schemas/PrometheusAuth'
        namespace:
          type: string
        isClusterCdActive:
          type: boolean
    TeamRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        active:
          type: boolean
    GitRegistry:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
        userName:
          type: string
        password:
          type: string
        sshPrivateKey:
          type: string
        accessToken:
          type: string
        authMode:
          type: string
        active:
          type: boolean
        gitHostId:
          type: integer
    DockerArtifactStoreBean:
      type: object
      properties:
        id:
          type: integer
        pluginId:
          type: string
        registryUrl:
          type: string
        registryType:
          type: string
        awsAccessKeyId:
          type: string
        awsSecretAccessKey:
          type: string
        awsRegion:
          type: string
        username:
          type: string
        password:
          type: string
        isDefault:
          type: boolean
        active:
          type: boolean
        connection:
          type: string
        cert:
          type: string
    ChartRepoDto:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
        name:
          type: string
        accessToken:
          type: string
        sshKey:
          type: string
        userName:
          type: string
        password:
          type: string
        default:
          type: boolean
        active:
          type: boolean
        authMode:
          type: string
    UpdateMaterialDTO:
      type: object
      properties:
        appId:
          type: integer
        material:
          $ref: '#/components/schemas/GitMaterial'
    ChartGroupBean:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
        chartGroupEntries:
          type: array
          items:
            $ref: '#/components/schemas/ChartGroupEntryBean'
        installedChartData:
          type: array
          items:
            $ref: '#/components/schemas/InstalledChartData'
    ChartGroupEntryBean:
      type: object
      properties:
        id:
          type: integer
        appStoreValuesVersionId:
          type: integer
        appStoreApplicationVersionId:
          type: integer
        appStoreValuesVersionName:
          type: string
        appStoreValuesChartVersion:
          type: string
        referenceType:
          type: string
        chartMetaData:
          $ref: '#/components/schemas/ChartMetaData'
    ChartMetaData:
      type: object
      properties:
        appStoreId:
          type: integer
        environmentId:
          type: integer
        isChartRepoActive:
          type: boolean
        chartName:
          type: string
        chartRepoName:
          type: string
        icon:
          type: string
        environmentName:
          type: string
        appStoreApplicationVersion:
          type: string
    InstalledChartData:
      type: object
      properties:
        installationTime:
          type: string
          description: time type
        installedCharts:
          $ref: '#/components/schemas/InstalledChart'
    InstalledChart:
      type: string
      properties:
        installedAppId:
          type: integer
    ChannelDto:
      type: object
      properties:
        channel:
          type: string
          description: type of channel, i.e. slack or SES
    SlackConfigDto:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        teamId:
          type: integer
        webhookUrl:
          type: string
        configName:
          type: string
        description:
          type: string
    SESConfigDto:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        teamId:
          type: integer
        region:
          type: string
        accessKey:
          type: string
        secretKey:
          type: string
        fromEmail:
          type: string
        toEmail:
          type: string
        sessionToken:
          type: string
        configName:
          type: string
        description:
          type: string
        default:
          type: boolean
    PrometheusAuth:
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
        tlsClientCert:
          type: string
        tlsClientKey:
          type: string
    DefaultClusterComponent:
        type: object
        properties:
          name:
            type: string
          appId:
            type: integer
          installedAppId:
            type: integer
          envId:
            type: integer
          envname:
            type: string
          status:
            type: string



    ApiError:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 404
        message:
          type: string
          example: "Resource not found"
        details:
          type: array
          items:
            type: string
          example: ["Resource not found in the system"]
paths:
  /orchestrator/cluster/delete:
    post:
      description: Delete Cluster
      operationId: DeleteFromDb
      security:
        - bearerAuth: []
      requestBody:
        description: A JSON object containing the cluster config
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterBean'
      responses:
        '200':
          description: Successfully delete the cluster
          content:
            application/json:
              schema:
                type: string
                example: "Cluster deleted successfully."
        '400':
          description: Bad Request. Input Validation(decode) error/wrong request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /env/delete:
    post:
      description: Delete Environment
      operationId: Delete
      security:
        - bearerAuth: []
      requestBody:
        description: A JSON object containing the env config
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentBean'
      responses:
        '200':
          description: Successfully delete the environment
          content:
            application/json:
              schema:
                type: string
                example: "Environment deleted successfully."
        '400':
          description: Bad Request. Input Validation(decode) error/wrong request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /team:
    post:
      description: Create Project
      operationId: SaveTeam
      security:
        - bearerAuth: []
      requestBody:
        description: A JSON object containing the project config
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRequest'
      responses:
        '200':
          description: Successfully created the project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamRequest'
        '400':
          description: Bad Request. Input Validation(decode) error/wrong request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      description: Get All Projects
      operationId: FetchAll
      responses:
        '200':
          description: Successfully retrieved all projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update Project
      operationId: UpdateTeam
      requestBody:
        description: A JSON object containing the project config
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRequest'
      responses:
        '200':
          description: Successfully updated the project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamRequest'
        '400':
          description: Bad Request. Input Validation(decode) error/wrong request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete Project
      operationId: DeleteTeam
      requestBody:
        description: A JSON object containing the project config
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRequest'
      responses:
        '200':
          description: Successfully delete the project
          content:
            application/json:
              schema:
                type: string
                example: "Project deleted successfully."
        '400':
          description: Bad Request. Input Validation(decode) error/wrong request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /team/autocomplete:
    get:
      description: Get Projects for Autocomplete
      operationId: FetchForAutocomplete
      responses:
        '200':
          description: Successfully retrieved projects for autocomplete
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /team/{id}:
    get:
      description: Get Project by ID
      operationId: FetchOne
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Project ID
      responses:
        '200':
          description: Successfully retrieved the project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamRequest'
        '400':
          description: Bad Request. Invalid ID format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /git/provider/delete:
    post:
      description: Delete Git Provider
      operationId: DeleteGitRepoConfig
      requestBody:
        description: A JSON object containing the provider config
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitRegistry'
      responses:
        '200':
          description: Successfully delete the git provider
          content:
            application/json:
              schema:
                type: string
                example: "Git Account deleted successfully."
        '400':
          description: Bad Request. Input Validation(decode) error/wrong request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /docker/registry/delete:
    post:
      description: Delete Docker Registry
      operationId: DeleteDockerRegistryConfig
      requestBody:
        description: A JSON object containing the registry config
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerArtifactStoreBean'
      responses:
        '200':
          description: Successfully delete the registry
          content:
            application/json:
              schema:
                type: string
                example: "Container Registry deleted successfully."
        '400':
          description: Bad Request. Input Validation(decode) error/wrong request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /app-store/repo/delete:
    post:
      description: Delete Chart Repo
      operationId: DeleteChartRepo
      requestBody:
        description: A JSON object containing the registry config
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartRepoDto'
      responses:
        '200':
          description: Successfully delete the chart repo
          content:
            application/json:
              schema:
                type: string
                example: "Chart repo deleted successfully."
        '400':
          description: Bad Request. Input Validation(decode) error/wrong request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /app/material/delete:
    post:
      description: Delete Git Material
      operationId: DeleteMaterial
      requestBody:
        description: A JSON object containing the material config
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMaterialDTO'
      responses:
        '200':
          description: Successfully delete the git material
          content:
            application/json:
              schema:
                type: string
                example: "Git material deleted successfully."
        '400':
          description: Bad Request. Input Validation(decode) error/wrong request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /chart-group/delete:
    post:
      description: Delete Chart Group
      operationId: DeleteChartgroup
      requestBody:
        description: A JSON object containing the chart group
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartGroupBean'
      responses:
        '200':
          description: Successfully delete the chart group
          content:
            application/json:
              schema:
                type: string
                example: "Chart group deleted successfully."
        '400':
          description: Bad Request. Input Validation(decode) error/wrong request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /notification/channel/delete:
    post:
      description: Delete Notification Channel
      operationId: DeleteNotificationChannelConfig
      requestBody:
        description: A JSON object containing the channel config
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ChannelDto'
                - $ref: '#/components/schemas/SlackConfigDto'
                - $ref: '#/components/schemas/SESConfigDto'
      responses:
        '200':
          description: Successfully delete the channel
          content:
            application/json:
              schema:
                type: string
                example: "Slack config deleted successfully."
        '400':
          description: Bad Request. Input Validation(decode) error/wrong request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'