// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	repository "github.com/devtron-labs/devtron/pkg/devtronResource/repository"
	mock "github.com/stretchr/testify/mock"
)

// DevtronResourceSearchableKeyRepository is an autogenerated mock type for the DevtronResourceSearchableKeyRepository type
type DevtronResourceSearchableKeyRepository struct {
	mock.Mock
}

// GetAll provides a mock function with given fields:
func (_m *DevtronResourceSearchableKeyRepository) GetAll() ([]*repository.DevtronResourceSearchableKey, error) {
	ret := _m.Called()

	var r0 []*repository.DevtronResourceSearchableKey
	if rf, ok := ret.Get(0).(func() []*repository.DevtronResourceSearchableKey); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*repository.DevtronResourceSearchableKey)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewDevtronResourceSearchableKeyRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewDevtronResourceSearchableKeyRepository creates a new instance of DevtronResourceSearchableKeyRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDevtronResourceSearchableKeyRepository(t mockConstructorTestingTNewDevtronResourceSearchableKeyRepository) *DevtronResourceSearchableKeyRepository {
	mock := &DevtronResourceSearchableKeyRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
