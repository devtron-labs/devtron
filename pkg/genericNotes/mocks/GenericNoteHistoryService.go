// Code generated by mockery v2.18.0. DO NOT EDIT.

package mocks

import (
	genericNotes "github.com/devtron-labs/devtron/pkg/genericNotes"
	mock "github.com/stretchr/testify/mock"

	pg "github.com/go-pg/pg"
)

// GenericNoteHistoryService is an autogenerated mock type for the GenericNoteHistoryService type
type GenericNoteHistoryService struct {
	mock.Mock
}

// Save provides a mock function with given fields: tx, bean, userId
func (_m *GenericNoteHistoryService) Save(tx *pg.Tx, bean *genericNotes.GenericNoteHistoryBean, userId int32) (*genericNotes.GenericNoteHistoryBean, error) {
	ret := _m.Called(tx, bean, userId)

	var r0 *genericNotes.GenericNoteHistoryBean
	if rf, ok := ret.Get(0).(func(*pg.Tx, *genericNotes.GenericNoteHistoryBean, int32) *genericNotes.GenericNoteHistoryBean); ok {
		r0 = rf(tx, bean, userId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*genericNotes.GenericNoteHistoryBean)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*pg.Tx, *genericNotes.GenericNoteHistoryBean, int32) error); ok {
		r1 = rf(tx, bean, userId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewGenericNoteHistoryService interface {
	mock.TestingT
	Cleanup(func())
}

// NewGenericNoteHistoryService creates a new instance of GenericNoteHistoryService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGenericNoteHistoryService(t mockConstructorTestingTNewGenericNoteHistoryService) *GenericNoteHistoryService {
	mock := &GenericNoteHistoryService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
