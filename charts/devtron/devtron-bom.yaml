global:
  podSecurityContext:
    fsGroup: 1000
    runAsGroup: 1000
    runAsUser: 1000
  containerSecurityContext:
    allowPrivilegeEscalation: false
    runAsUser: 1000
    runAsNonRoot: true
  containerRegistry: "quay.io/devtron"
  
installer:
  release: "v0.7.0"
  registry: ""
  image: "inception"
  tag: "473deaa4-185-21582"
  
components:
  dashboard:
    config:
      extraConfigs:
        USE_V2: "true"
        ENABLE_BUILD_CONTEXT: "true"
        ENABLE_RESTART_WORKLOAD: "true"
        HIDE_EXCLUDE_INCLUDE_GIT_COMMITS: "false"
        ENABLE_SCOPED_VARIABLES: "true"
        ENABLE_CI_JOB: "true"
        GLOBAL_API_TIMEOUT: "60000"
        TRIGGER_API_TIMEOUT: "60000"
        ENABLE_EXTERNAL_ARGO_CD: "false"
        SERVICE_WORKER_TIMEOUT: "1"
        API_BATCH_SIZE: "30"
    registry: ""
    image: "dashboard:87aaf7ac-690-23135"
    imagePullPolicy: IfNotPresent
    
  devtron:
    registry: ""
    image: "hyperion:3aa7e420-280-23147"
    cicdImage: "devtron:3aa7e420-434-23146"
    imagePullPolicy: IfNotPresent
    customOverrides: {}
    
  ciRunner:
    registry: ""
    image: "ci-runner:6e721248-138-23081"
    
  argocdDexServer:
    registry: ""
    image: "dex:v2.30.2"
    imagePullPolicy: IfNotPresent
    initContainer:
      authenticator: "authenticator:e414faff-393-13273"
      
  kubelink:
    registry: ""
    image: "kubelink:a810dbae-564-23055"
    imagePullPolicy: IfNotPresent
    configs:
      ENABLE_HELM_RELEASE_CACHE: "true"
      MANIFEST_FETCH_BATCH_SIZE: "2"
      NATS_MSG_PROCESSING_BATCH_SIZE: "1"
      NATS_SERVER_HOST: nats://devtron-nats.devtroncd:4222
      PG_ADDR: postgresql-postgresql.devtroncd
      PG_DATABASE: orchestrator
      PG_LOG_QUERY: "true"
      PG_PORT: "5432"
      PG_USER: postgres
    dbconfig:
      secretName: postgresql-postgresql
      keyName: postgresql-password
      
  kubewatch:
    registry: ""
    image: "kubewatch:f8ac0fe6-419-23054"
    imagePullPolicy: IfNotPresent
    configs:
      devtroncd_NAMESPACE: "devtron-ci"
      CI_INFORMER: "true"
      ACD_NAMESPACE: "devtroncd"
      ACD_INFORMER: "true"
      NATS_STREAM_MAX_AGE: "10800"
      
  postgres:
    registry: ""
    image: "postgres:11.9.0-debian-10-r26"
    armImage: "postgres:11.9"
    initImage: "minideb:latest"
    imagePullPolicy: "IfNotPresent"
    metrics:
      image: postgres_exporter:v0.4.7
      armImage: postgres_exporter:v0.10.1
      
  gitsensor:
    registry: ""
    image: "git-sensor:8545feb5-200-22005"
    imagePullPolicy: IfNotPresent
    serviceMonitor:
      enabled: false
    persistence:
      volumeSize: 2Gi
    configs:
      PG_ADDR: postgresql-postgresql.devtroncd
      PG_USER: postgres
      COMMIT_STATS_TIMEOUT_IN_SEC: "2"
      ENABLE_FILE_STATS: "true"
      USE_GIT_CLI: "true"
    dbconfig:
      secretName: postgresql-postgresql
      keyName: postgresql-password
  # Values for lens
  lens:
    registry: ""
    image: "lens:3d3e8f08-333-23057"
    imagePullPolicy: IfNotPresent
    configs:
      GIT_SENSOR_PROTOCOL: GRPC
      GIT_SENSOR_URL: git-sensor-service.devtroncd:90
      NATS_SERVER_HOST: nats://devtron-nats.devtroncd:4222
      PG_ADDR: postgresql-postgresql.devtroncd
      PG_PORT: "5432"
      PG_USER: postgres
      PG_DATABASE: lens
    dbconfig:
      secretName: postgresql-postgresql
      keyName: postgresql-password
  # Change below values for nats
  nats:
    registry: ""
    image: nats:2.9.3-alpine
    reloader:
      image: nats-server-config-reloader:0.6.2
      imagePullPolicy: IfNotPresent
    metrics:
      image: prometheus-nats-exporter:0.9.0
      imagePullPolicy: IfNotPresent
    natsBox:
      image: nats-box
    serviceMonitor:
      enabled: false
    persistence:
      storage: 5Gi
      
  migrator:
    registry: ""
    image: "migrator:v4.16.2"
    kubectlImage: "kubectl:latest"
    duplicateChartImage: devtron-utils:dup-chart-repo-v1.1.0
    envVars:
      devtron:
        DB_NAME: "orchestrator"
      casbin:
        DB_NAME: "casbin"
      gitsensor:
        DB_NAME: "git_sensor"
      lens:
        DB_NAME: "lens"
  chartSync:
    registry: ""
    image: chart-sync:b67ab589-150-23082
# values for argocd integration
argo-cd:
  global:
    image:
      # -- If defined, a repository applied to all Argo CD deployments
      repository: quay.io/argoproj/argocd
      # -- Overrides the global Argo CD image tag whose default is the chart appVersion
      tag: "v2.5.2"
      # -- If defined, a imagePullPolicy applied to all Argo CD deployments
      imagePullPolicy: IfNotPresent
# Change below values for workflow controller
workflowController:
  registry: "quay.io/argoproj"
  image: "workflow-controller:v3.4.3"
  executorImage: "argoexec:v3.4.3"
  IMDSv1Image: "workflow-controller:v3.0.7"
  IMDSv1ExecutorImage: "argoexec:v3.0.7"
  
security:
  imageScanner:
    image: "image-scanner:3ab2ba46-141-23064"
  clair:
    image:
      repository: clair
      tag: 4.3.6
# Values for notifier integration
notifier:
  image: "notifier:924a17f6-372-22110"
  
minio:
  image: "minio:RELEASE.2021-02-14T04-01-33Z"
  mbImage: "minio-mc:RELEASE.2021-02-14T04-28-06Z"
  gatewayImage: "minio:RELEASE.2020-12-03T05-49-24Z"
# Values for grafana integration
monitoring:
  grafana:
    registry: ""
    image: "grafana:7.3.1"
    busyboxImage: "busybox:1.31.1"
    batsImage: "bats:v1.4.1"
    imagePullPolicy: IfNotPresent
    grafanaOrgJob:
      curlImage: k8s-utils:tutum-curl
    grafanaDashboards:
      image: "k8s-sidecar:1.1.0"
      curlImage: "curl:7.73.0"
      imagePullPolicy: IfNotPresent
