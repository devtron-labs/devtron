{{- if $.Values.installer.modules }}
{{- if has "cicd" $.Values.installer.modules }}
{{- with .Values.components.gitsensor }}
apiVersion: v1
kind: Secret
metadata:
  name: git-sensor-secret
  labels:
    app: git-sensor
    release: devtron
{{- if .secrets }}
data:
{{- range $k, $v := .secrets }}
  {{ $k }}: {{ $v | b64enc }}
{{- end }}
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: git-sensor-cm
  labels:
    app: git-sensor
    release: devtron
{{- if .configs }}
data:
{{ toYaml .configs | indent 2 }}
{{- end }}
  
---
# Source: gitsensor/templates/generic.yaml
apiVersion: v1
kind: Service
metadata:
  name: git-sensor-service
  labels:
    app: git-sensor
    release: devtron
spec:
  ports:
    - name: sensor
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: grpc
      port: 90
      protocol: TCP
      targetPort: 8081
  selector:
    app: git-sensor
---
# Source: gitsensor/templates/generic.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: git-sensor
  labels:
    release: devtron
    app: git-sensor
spec:
  selector:
    matchLabels:
      app: git-sensor # has to match .spec.template.metadata.labels
  serviceName: git-sensor
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: git-sensor
    spec:
      terminationGracePeriodSeconds: 10
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
      initContainers:
        - command:
          - /bin/sh
          - -c
          - mkdir -p /git-base/ssh-keys && chown -R devtron:devtron /git-base && chmod 777 /git-base/ssh-keys
          image: {{ include "common.image" (dict "component" $.Values.components.gitsensor "global" $.Values.global) }}
          imagePullPolicy: IfNotPresent
          name: chown-git-base
          resources: {}
          securityContext:
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /git-base/
            name: git-volume
      containers:
        - name: git-sensor
          image: {{ include "common.image" (dict "component" $.Values.components.gitsensor "global" $.Values.global) }}
          {{- if  .imagePullPolicy }}
          imagePullPolicy: {{ .imagePullPolicy }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1000
            runAsNonRoot: true
          ports:
            - containerPort: 8080
              name: sensor
            - containerPort: 8081
              name: grpc
          volumeMounts:
            - name: git-volume
              mountPath: /git-base/
          env:
            - name: DEVTRON_APP_NAME
              value: git-sensor
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- if $.Values.components.gitsensor.dbconfig }}
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .dbconfig.secretName }}
                  key: {{ .dbconfig.keyName }}
            {{- end }}
          envFrom:
          - secretRef:
              name: git-sensor-secret
          - configMapRef: 
              name: git-sensor-cm
          {{- if .resources }}        
          resources:
          {{- toYaml .resources | nindent 12 }}
          {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: git-volume
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .persistence.volumeSize }}
---
{{- if .serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: git-sensor-sm
  labels:
    app: git-sensor
    kind: Prometheus
    release: devtron
spec:
  endpoints:
    - port: app
      path: /metrics
  selector:
    matchLabels:
      app: git-sensor
{{- end }}
{{- end }}
{{- end }}
{{- end }}