{{- with .Values.components.devtron }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "devtron-cm"
  labels:
    release: devtron
  annotations:
    "helm.sh/resource-policy": keep
data:
  PG_USER: postgres
  PG_ADDR: postgresql-postgresql.devtroncd
  PG_PORT: "5432"
  HELM_CLIENT_URL: kubelink-service:50051
  DASHBOARD_PORT: "80"
  DASHBOARD_HOST: dashboard-service.devtroncd
  PG_DATABASE: orchestrator
  DEX_HOST: http://argocd-dex-server.devtroncd
  DEX_PORT: "5556"
  APP_SYNC_IMAGE: "quay.io/devtron/chart-sync:07ac8fd7-150-11120"
{{- if $.Values.installer.modules }}
{{- if has "cicd" $.Values.installer.modules }}
{{- if $.Values.configs }}
{{- if or ($.Values.minio.enabled) ($.Values.configs.BLOB_STORAGE_PROVIDER) }}
  BLOB_STORAGE_ENABLED: "true"
{{- end }}
{{ toYaml $.Values.configs | indent 2 }}
{{- if and ($.Values.minio.enabled) (not $.Values.configs.BLOB_STORAGE_PROVIDER) }}
  BLOB_STORAGE_PROVIDER: "S3"
  BLOB_STORAGE_S3_ENDPOINT: "http://devtron-minio.devtroncd:9000"
  BLOB_STORAGE_S3_ENDPOINT_INSECURE: "true"
  DEFAULT_BUILD_LOGS_BUCKET: "devtron-ci-log"
  DEFAULT_CACHE_BUCKET: "devtron-ci-cache"
{{- if lt ($.Values.minio.replicaCount | int) 4 }}
  BLOB_STORAGE_S3_BUCKET_VERSIONED: "false"
{{- else }}
  BLOB_STORAGE_S3_BUCKET_VERSIONED: "true"
{{- end }}
{{- end }}
{{- if or ($.Values.minio.enabled) (eq $.Values.configs.BLOB_STORAGE_PROVIDER "AZURE") }}
  DEFAULT_CACHE_BUCKET_REGION: "us-west-2"
  DEFAULT_CD_LOGS_BUCKET_REGION: "us-west-2"
{{- end }}
{{- if and (eq $.Values.configs.BLOB_STORAGE_PROVIDER "S3") (not $.Values.configs.BLOB_STORAGE_S3_ENDPOINT) }}
  BLOB_STORAGE_S3_ENDPOINT: ""
{{- end }}
{{- if $.Values.configs.BLOB_STORAGE_PROVIDER }}
  BLOB_STORAGE_S3_BUCKET_VERSIONED: "true"
{{- end }}
{{- if $.Values.monitoring }}
{{- if $.Values.monitoring.grafana }}
{{- if $.Values.monitoring.grafana.enabled }}
  GRAFANA_URL: "http://%s:%s@devtron-grafana.devtroncd/grafana"
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: devtron-custom-cm
  labels:
    release: devtron
  annotations:
    "helm.sh/resource-policy": keep
{{- if .customOverrides }}
data:
{{ toYaml .customOverrides | indent 2}}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: devtron
  labels:
    app: devtron
    release: devtron
  annotations:
    "helm.sh/resource-policy": keep
spec:
  selector:
    matchLabels:
      app: devtron
      release: devtron
  replicas: 1
  minReadySeconds: 60
  template:
    metadata:
      labels:
        app: devtron
        release: devtron
    spec:
      terminationGracePeriodSeconds: 30
      restartPolicy: Always
      serviceAccountName: devtron
      {{- if and $.Values.global $.Values.global.podSecurityContext }}
      securityContext:
{{- toYaml $.Values.global.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: devtron
          {{- if $.Values.installer.modules }}
          {{- if and (has "cicd" $.Values.installer.modules) ($.Release.IsUpgrade) }}
          image: {{ $.Values.components.devtron.cicdImage }}
          {{- else }}
          image: {{ $.Values.components.devtron.image }}
          {{- end }}
          {{- else }}
          image: {{ $.Values.components.devtron.image }}
          {{- end }}
          imagePullPolicy: {{ .imagePullPolicy }}
          {{- if and $.Values.global $.Values.global.containerSecurityContext }}
          securityContext:
{{- toYaml $.Values.global.containerSecurityContext | nindent 12 }}
          {{- end }}
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - ' curl -X POST -H "Content-Type: application/json" -d ''{"eventType":
                  "SIG_TERM"}'' localhost:8080/orchestrator/telemetry/summary'
          ports:
            - name: devtron
              containerPort: 8080
              protocol: TCP
          env:
            - name: DEVTRON_APP_NAME
              value: devtron
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          envFrom:
          - configMapRef:
              name: "devtron-cm"
          - secretRef:
              name: "devtron-secret"
          - configMapRef:
              name: "devtron-custom-cm"
          - secretRef:
              name: "devtron-custom-secret"
          {{- if .resources }}   
          resources:
          {{- toYaml .resources | nindent 12 }}
          {{- end }}
  revisionHistoryLimit: 3
---
{{- if .serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: devtron-sm
  labels:
    kind: Prometheus
    app: devtron
    release: devtron
  annotations:
    "helm.sh/resource-policy": keep
spec:
  endpoints:
    - port: devtron
      path: /metrics
      scheme: http
      interval: 30s
      scrapeTimeout: 3s
  selector:
    matchLabels:
      app: devtron
{{- end }}
{{- end }}
