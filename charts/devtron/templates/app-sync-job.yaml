apiVersion: batch/v1
kind: Job
metadata:
  name: app-sync-job-{{ randAlphaNum 5 | lower }}
spec:
      template:
        spec:
          containers:
          - name: chart-sync
            image: quay.io/devtron/chart-sync:1227622d-132-3775
            env:
            - name: PG_ADDR
              value: postgresql-postgresql.devtroncd
            - name: PG_DATABASE
              value: orchestrator
            - name: PG_USER
              value: postgres
            envFrom:
            - secretRef:
                name: devtron-secret
          restartPolicy: OnFailure          
          {{- if $.Values.global.nodeSelector }}
          nodeSelector:
            {{- toYaml $.Values.global.nodeSelector | nindent 10 }}
          {{- end }}
          {{- if $.Values.global.tolerations }}
          tolerations:
            {{- toYaml $.Values.global.tolerations | nindent 10 }}
          {{- end }}
      backoffLimit: 4
      activeDeadlineSeconds: 120
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: app-sync-cronjob
  annotations:
    "helm.sh/resource-policy": keep
spec:
  schedule: "0 19 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: chart-sync
            image: quay.io/devtron/chart-sync:1227622d-132-3775
            env:
            - name: PG_ADDR
              value: postgresql-postgresql.devtroncd
            - name: PG_DATABASE
              value: orchestrator
            - name: PG_USER
              value: postgres
            envFrom:
            - secretRef:
                name: devtron-secret
          restartPolicy: Never
          {{- if $.Values.global.nodeSelector }}
          nodeSelector:
            {{- toYaml $.Values.global.nodeSelector | nindent 12 }}
          {{- end }}
          {{- if $.Values.global.tolerations }}
          tolerations:
            {{- toYaml $.Values.global.tolerations | nindent 10 }}
          {{- end }}
      backoffLimit: 4