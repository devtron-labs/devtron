{{- with .Values.components.kubelink }}
apiVersion: v1
kind: Secret
metadata:
  name: kubelink-secret
  labels:
    app: kubelink
    release: devtron
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
{{- if .secrets }}
data:
{{- range $k, $v := .secrets }}
  {{ $k }}: {{ $v | b64enc }}
{{- end }}
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubelink-cm
  labels:
    app: kubelink
    release: devtron
  annotations:
    "helm.sh/resource-policy": keep
{{- if .configs }}
data:
{{ toYaml .configs | indent 2 }}
{{- if $.Values.installer.modules }}
{{- if has "cicd" $.Values.installer.modules }}
  RUN_HELM_INSTALL_IN_ASYNC_MODE: "true"
{{- else }}
  RUN_HELM_INSTALL_IN_ASYNC_MODE: "false"
{{- end }}
{{- end }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubelink
  labels:
    app: kubelink
    chart: kubelink-4.11.1
  annotations:
    "helm.sh/resource-policy": keep
spec:
  selector:
    matchLabels:
      app: kubelink
  replicas: 1
  minReadySeconds: 60
  template:
    metadata:
      labels:
        app: kubelink
    spec:
      {{- include "common.schedulerConfig" (dict "nodeSelector" $.Values.components.kubelink.nodeSelector "tolerations" $.Values.components.kubelink.tolerations "imagePullSecrets" $.Values.components.kubelink.imagePullSecrets "global" $.Values.global) | indent 6 }}
      terminationGracePeriodSeconds: 30
      restartPolicy: Always
      serviceAccount: devtron
      {{- include "common.podSecurityContext" (dict "podSecurityContext" $.Values.components.kubelink.podSecurityContext "global" $.Values.global) | indent 6 }}
      containers:
        - name: kubelink
          image: {{ include "common.image" (dict "component" $.Values.components.kubelink "global" $.Values.global ) }}
          imagePullPolicy: {{ .imagePullPolicy }}
          {{- include "common.containerSecurityContext" (dict "containerSecurityContext" $.Values.components.kubelink.containerSecurityContext "global" $.Values.global) | indent 10 }}
          ports:
            - name: app
              containerPort: 50051
              protocol: TCP
          env:
            - name: DEVTRON_APP_NAME
              value: kubelink
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- if .dbconfig }}
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .dbconfig.secretName }}
                  key: {{ .dbconfig.keyName }}
            {{- end }}
          envFrom:
          - configMapRef:
              name: kubelink-cm
          - secretRef:
              name: kubelink-secret
          - configMapRef:
              name: devtron-common-cm
          {{- if .resources }}        
          resources:
          {{- toYaml .resources | nindent 12 }}
          {{- end }}                  
  revisionHistoryLimit: 3
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kubelink
  name: kubelink-service
  namespace: devtroncd
  annotations:
    "helm.sh/resource-policy": keep
spec:
  ports:
    - name: app
      port: 50051
      protocol: TCP
      targetPort: app
  selector:
    app: kubelink
  sessionAffinity: None
  type: ClusterIP
{{- end }}